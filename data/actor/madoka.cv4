function InputCancelMove()
{
	if (this.isAir)
	{
		if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
		{
			this.u.BeginAirJump.call(this);
			return;
		}
	}
	else if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
	{
		this.u.BeginJump.call(this);
		return;
	}
}

function InputAttack()
{
	if (this.input.b0 == 1)
	{
		this.u.inputCountA = 10;
	}

	if (this.input.b1 == 1)
	{
		this.u.inputCountB = 10;
	}

	if (this.input.b3 == 1)
	{
		this.u.inputCountC = 10;
	}

	this.u.inputCountA--;
	this.u.inputCountB--;
	this.u.inputCountC--;

	if (this.u.inputCountC > 0)
	{
		if (this.C_Check(40))
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginMagic_Air.call(this);
				}
				else
				{
					this.u.BeginMagic.call(this);
				}
			}
		}
	}
	else if (this.u.inputCountB > 0)
	{
		if (this.C_Check(20))
		{
			if (this.isAir)
			{
				this.u.BeginAttackB_Air.call(this);
			}
			else
			{
				this.u.BeginAttackB.call(this);
			}
		}
	}
	else if (this.u.inputCountA > 0)
	{
		if (this.C_Check(10) && this.input.y > 0)
		{
			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackA_UnderAir.call(this);
			}
			else
			{
				this.u.BeginAttackA_Under.call(this);
			}
		}
		else if (this.C_Check(10) && this.input.y < 0)
		{
			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackA_UpperAir.call(this);
			}
			else
			{
				this.u.BeginAttackA_Upper.call(this);
			}
		}
		else if (this.C_Check(10))
		{
			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackA_Air.call(this);
			}
			else
			{
				this.u.BeginAttackA.call(this);
			}
		}
	}
}

function BeginWalk()
{
	if (this.input.x > 0)
	{
		this.direction = 1.0;
		this.vx = 4.0;
	}
	else
	{
		this.direction = -1.0;
		this.vx = -4.0;
	}

	if (this.motion != this.u.CA + 1)
	{
		this.ChangeFreeMove();
		this.fallLabel = this.u.BeginFall;
		this.SetMotion(this.u.CA + 1, 0);
	}
}

function BeginJump()
{
	if (!this.isAir)
	{
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
		}
	}
}

function BeginAirJump()
{
	if (this.u.jumpCount == 0)
	{
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.u.jumpCount++;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
			return;
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
			return;
		}
	}
}

function BeginAirSlide()
{
	if (this.input.x)
	{
		this.vx += this.input.x > 0 ? 0.2 : -0.2;

		if (this.Abs(this.vx) > 4.0)
		{
			this.vx = this.vx > 0.0 ? 4.0 : -4.0;
		}
	}
}

function BeginAttackFall()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 9, 0);
	this.PlaySE(1002);
	this.vx = 0.0;
	this.vy = 15.0;
	this.stateLabel = this.u.AttackFall;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.isAir = true;
	this.HitReset();
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function AttackFall()
{
	if (this.hitTarget.len())
	{
		this.u.HitAttackFall.call(this);
	}
}

function HitAttackFall()
{
	this.ChangeFreeMove();
	this.isAir = true;
	this.sitLabel = this.u.BeginSit;
	this.vy = -15.0;
	this.vx = -4.0 * this.direction;
	this.collisionMask = 8;
	this.u.jumpCount = 0;
	this.SetMotion(this.u.CA + 3, 0);
}

function SetFoot()
{
	if (this.option[0] == null)
	{
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ShotFoot, this.DefaultShotTable());
	}
}

function ClearFoot()
{
	if (this.option[0] != null)
	{
		if (this.option[0].func)
		{
			this.option[0].func();
		}
	}
}

function SetArrow( rot_ )
{
	if (this.option[2] == null)
	{
		local t = this.DefaultShotTable();
		t.rz = rot_;
		this.world2d.CreateActor(this.point2_x, this.point2_y, this.direction, this.Madoka_SetArrow, t);
	}
}

function ReleaseArrow()
{
	if (this.option[2] != null)
	{
		if (this.option[2].func)
		{
			this.option[2].func();
		}
	}
}

function SetFire( take_, rot_ )
{
	if (this.option[1] == null)
	{
		local t = this.DefaultShotTable();
		t.rz = rot_;
		t.flag1 = take_;
		this.world2d.CreateActor(this.point1_x, this.point1_y, -this.direction, this.Madoka_ChargeFire, t);
	}
}

function ReleaseFire()
{
	if (this.option[1] != null)
	{
		if (this.option[1].func)
		{
			this.option[1].func();
		}
	}
}

function BeginChargeEffect( rz_ = 0.0 )
{
	this.PlaySE(1501);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = 0;
	this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Madoka_ChageUpEffect, t);
	this.u.SetFire.call(this, 1, rz_);
}

function ChargeUP( lv_ = 1, rz_ = 0.0 )
{
	if (lv_ == 1)
	{
		this.u.ReleaseFire.call(this);
		local t = this.DefaultShotTable();
		t.flag1 = 3;
		this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Madoka_ChageUpEffect, t);
		this.u.SetFire.call(this, 4, rz_);
	}

	if (lv_ == 2)
	{
		this.u.ReleaseFire.call(this);
		local t = this.DefaultShotTable();
		t.flag1 = 6;
		this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Madoka_ChageUpEffect, t);
		this.u.SetFire.call(this, 7, rz_);
	}
}

function ChageDown()
{
}

function Set_ChargeEffect( c_ )
{
	switch(c_)
	{
	case 1:
		this.PlaySE(1502);
		this.u.ChargeUP.call(this, 1);

		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.0;
			t.scale = 1.0;
			this.world2d.CreateActor(this.x + this.vx - 25 * this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		}

		break;

	case 2:
		this.PlaySE(1503);
		this.u.ChargeUP.call(this, 2);

		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.0;
			t.scale = 2.0;
			this.world2d.CreateActor(this.x + this.vx - 25 * this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		}

		break;
	}
}

function BeginAttackA()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 20, 0);
	this.flag1 = 1;
	this.stateLabel = this.u.AttackA;
	this.fallLabel = this.u.BeginFall;
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx *= 0.25;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -13.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_Loop
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackA()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		this.count++;
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 20, 2);
			this.u.AttackA_Fire.call(this);
		}
	}
}

function AttackA_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 20, 2);
		this.flag1--;
		this.u.AttackA_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Fire.call(this);
	}
}

function AttackA_Fire()
{
	this.PlaySE(1504);
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	this.u.chargeLV = 0;
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_Arrow6B, t);
}

function BeginAttackA_Air()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 21, 0);
	this.stateLabel = this.u.AttackA_Air;
	this.sitLabel = this.u.BeginSit;
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	this.vx *= 0.0;
	this.vy *= 0.0;
	this.setG = 0.0;
	this.flag1 = 1;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -13.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_Air_Loop,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackA_Air()
{
	if (this.keyTake <= 3)
	{
		this.setG = 0.0;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 21, 2);
			this.u.AttackA_Fire.call(this);
		}
	}
}

function AttackA_Air_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 21, 2);
		this.flag1--;
		this.u.AttackA_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Fire.call(this);
	}
}

function BeginAttackA_Under()
{
	this.LabelClear();
	this.count = 0;
	this.flag1 = 1;
	this.vx *= 0.25;
	this.SetMotion(this.u.CA + 22, 0);
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	this.stateLabel = this.u.AttackA_Under;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, 35.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_Under_Loop
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackA_Under()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 22, 2);
			this.u.AttackA_Under_Fire.call(this);
		}
	}
}

function AttackA_Under_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 22, 2);
		this.flag1--;
		this.u.AttackA_Under_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Under_Fire.call(this);
	}
}

function AttackA_Under_Fire()
{
	this.PlaySE(1504);
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.rz = 3.141592 * 0.25;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_Arrow6B, t);
}

function BeginAttackA_UnderAir()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 23, 0);
	this.flag1 = 1;
	this.stateLabel = this.u.AttackA_UnderAir;
	this.sitLabel = this.u.BeginSit;
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, 35.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_UnderAir_Loop,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackA_UnderAir()
{
	if (this.keyTake <= 3)
	{
		this.setG = 0.0;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 23, 2);
			this.u.AttackA_Under_Fire.call(this);
		}
	}
}

function AttackA_UnderAir_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 23, 2);
		this.flag1--;
		this.u.AttackA_Under_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Under_Fire.call(this);
	}
}

function BeginAttackA_Upper()
{
	this.LabelClear();
	this.count = 0;
	this.flag1 = 1;
	this.vx *= 0.25;
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	this.SetMotion(this.u.CA + 24, 0);
	this.stateLabel = this.u.AttackA_Upper;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -40.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_Upper_Loop
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackA_Upper()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 24, 2);
			this.u.AttackA_Upper_Fire.call(this);
		}
	}
}

function AttackA_Upper_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 24, 2);
		this.flag1--;
		this.u.AttackA_Upper_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Upper_Fire.call(this);
	}
}

function AttackA_Upper_Fire()
{
	this.PlaySE(1504);
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.rz -= 3.141592 * 0.25;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_Arrow6B, t);
}

function BeginAttackA_UpperAir()
{
	this.LabelClear();
	this.count = 0;
	this.flag1 = 1;
	this.SetMotion(this.u.CA + 25, 0);
	this.u.chargeCount = 0;

	if (this.u.chargeLV > 1)
	{
		this.u.chargeLV = 1;
	}

	this.stateLabel = this.u.AttackA_UpperAir;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -40.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
		},
		null,
		this.u.AttackA_UpperAir_Loop,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackA_UpperAir()
{
	if (this.keyTake <= 3)
	{
		this.setG = 0.0;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b0 <= 0)
		{
			switch(this.u.chargeLV)
			{
			case 1:
				this.flag1 = 5;
				break;

			case 2:
				this.flag1 = 12;
				break;
			}

			this.u.chargeLV = 0;
			this.SetMotion(this.u.CA + 25, 2);
			this.u.AttackA_Upper_Fire.call(this);
		}
	}
}

function AttackA_UpperAir_Loop()
{
	if (this.flag1 > 0)
	{
		this.SetMotion(this.u.CA + 25, 2);
		this.flag1--;
		this.u.AttackA_Upper_Fire.call(this);
	}
	else
	{
		this.u.AttackA_Upper_Fire.call(this);
	}
}

function BeginAttackB()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 30, 0);
	this.stateLabel = this.u.AttackB;
	this.fallLabel = this.u.BeginFall;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.BeginChargeEffect.call(this);
			this.u.SetArrow.call(this, -13.0 * 0.017453292);
		}
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackB()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 30, 2);
			this.u.AttackB_Fire.call(this);
		}
	}
}

function AttackB_Fire()
{
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.chargeLV;

	if (t.flag1 >= 2)
	{
		this.PlaySE(1506);
	}
	else
	{
		this.PlaySE(1505);
	}

	if (this.u.chargeLV > 0)
	{
		this.u.chargeLV--;
	}

	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_ChargeArrow, t);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 1;
		t.flag2 = 0.0;
		t.scale = 1.5;
		this.world2d.CreateActor(this.x + this.vx - 25 * this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
	}
}

function BeginAttackB_Air()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 31, 0);
	this.stateLabel = this.u.AttackB_Air;
	this.sitLabel = this.u.BeginSit;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.BeginChargeEffect.call(this);
			this.u.SetArrow.call(this, -13.0 * 0.017453292);
		},
		null,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackB_Air()
{
	if (this.keyTake <= 2)
	{
		this.setG = 0.0;
	}

	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 31, 2);
			this.u.AttackB_Fire.call(this);
		}
	}
}

function BeginAttackB_Under()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 32, 0);
	this.stateLabel = this.u.AttackB_Under;
	this.fallLabel = this.u.BeginFall;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.BeginChargeEffect.call(this);
			this.u.SetArrow.call(this, 35.0 * 0.017453292);
		}
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackB_Under()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 32, 2);
			this.u.AttackB_Under_Fire.call(this);
		}
	}
}

function AttackB_Under_Fire()
{
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.chargeLV;

	if (t.flag1 >= 2)
	{
		this.PlaySE(1506);
	}
	else
	{
		this.PlaySE(1505);
	}

	if (this.u.chargeLV > 0)
	{
		this.u.chargeLV--;
	}

	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_ChargeArrow, t);
}

function BeginAttackB_UnderAir()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 33, 0);
	this.stateLabel = this.u.AttackB_Under_Air;
	this.sitLabel = this.u.BeginSit;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.BeginChargeEffect,
		null,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackB_Under_Air()
{
	if (this.keyTake <= 2)
	{
		this.setG = 0.0;
	}

	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 33, 2);
			this.u.AttackB_Under_Fire.call(this);
		}
	}
}

function AttackB_Under_Fire()
{
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.chargeLV;
	t.rz = 3.141592 * 0.25;

	if (t.flag1 >= 2)
	{
		this.PlaySE(1506);
	}
	else
	{
		this.PlaySE(1505);
	}

	if (this.u.chargeLV > 0)
	{
		this.u.chargeLV--;
	}

	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_ChargeArrow, t);
}

function BeginAttackB_Upper()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 34, 0);
	this.stateLabel = this.u.AttackB_Upper;
	this.fallLabel = this.u.BeginFall;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.BeginChargeEffect.call(this);
			this.u.SetArrow.call(this, -40.0 * 0.017453292);
		}
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackB_Upper()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 34, 2);
			this.u.AttackB_Upper_Fire.call(this);
		}
	}
}

function AttackB_Upper_Fire()
{
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.chargeLV;

	if (t.flag1 >= 2)
	{
		this.PlaySE(1506);
	}
	else
	{
		this.PlaySE(1505);
	}

	if (this.u.chargeLV > 0)
	{
		this.u.chargeLV--;
	}

	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_ChargeArrow, t);
}

function BeginAttackB_UpperAir()
{
	this.LabelClear();
	this.count = 0;
	this.SetMotion(this.u.CA + 35, 0);
	this.stateLabel = this.u.AttackB_Upper_Air;
	this.sitLabel = this.u.BeginSit;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.BeginChargeEffect,
		null,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function AttackB_Upper_Air()
{
	if (this.keyTake <= 2)
	{
		this.setG = 0.0;
	}

	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 60, 2);
		this.u.Set_ChargeEffect.call(this, c_);

		if (this.input.b1 <= 0)
		{
			this.SetMotion(this.u.CA + 35, 2);
			this.u.AttackB_Upper_Fire.call(this);
		}
	}
}

function AttackB_Upper_Fire()
{
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	t.flag1 = this.u.chargeLV;
	t.rz = -3.141592 * 0.25;

	if (t.flag1 >= 2)
	{
		this.PlaySE(1506);
	}
	else
	{
		this.PlaySE(1505);
	}

	if (this.u.chargeLV > 0)
	{
		this.u.chargeLV--;
	}

	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_ChargeArrow, t);
}

function BeginMagic()
{
	this.LabelClear();
	this.count = 0;
	this.vx *= 0.25;
	this.SetMotion(this.u.CA + 40, 0);
	this.stateLabel = this.u.Magic;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -88.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
			this.u.ReleaseFire.call(this);
			local t = this.DefaultShotTable();
			t.flag1 = 6;
			this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Madoka_ChageUpEffect, t);
			this.u.SetFire.call(this, 7, 45.0);
		}
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Magic()
{
	if (this.Abs(this.vx) <= 0.2)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
	}

	if (this.keyTake == 1)
	{
		this.count++;

		if (this.count >= 25)
		{
			this.u.Magic_Fire.call(this);
			this.SetMotion(this.u.CA + 40, 2);
		}
	}
}

function BeginMagic_Air()
{
	this.LabelClear();
	this.count = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetMotion(this.u.CA + 41, 0);
	this.stateLabel = this.u.Magic_Air;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.u.SetArrow.call(this, -88.0 * 0.017453292);
			this.u.BeginChargeEffect.call(this);
			this.u.ReleaseFire.call(this);
			local t = this.DefaultShotTable();
			t.flag1 = 6;
			this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Madoka_ChageUpEffect, t);
			this.u.SetFire.call(this, 7, 45.0);
		},
		null,
		this.u.ClearFoot
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.u.SetFoot.call(this);
}

function Magic_Air()
{
	if (this.keyTake <= 3)
	{
		this.setG = 0.0;
	}

	if (this.keyTake == 1)
	{
		this.count++;

		if (this.count >= 25)
		{
			this.u.Magic_Fire.call(this);
			this.SetMotion(this.u.CA + 41, 2);
		}
	}
}

function Magic_Fire()
{
	this.PlaySE(1507);
	this.u.ReleaseArrow.call(this);
	this.u.ReleaseFire.call(this);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Madoka_MagicArrow, t);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.flag2 = 0.0;
		t.scale = 3.0;
		this.world2d.CreateActor(this.x + this.vx - 25 * this.direction, this.y + this.vy, this.direction, this.Effect_Smoke, t);
	}
}

