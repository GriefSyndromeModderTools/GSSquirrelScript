function EndtoRelease()
{
	this.Release();
	return;
}

function Init_HandGun( t )
{
	this.ShotInit(t);
	this.SetMotion(56, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;

	if (this.rand() % 10 <= 4)
	{
		this.sy *= -1.0;
	}

	this.rz = (7 - this.rand() % 15) * 0.017453292;
	this.vx = 40.0 * this.direction * this.cos(this.rz);
	this.vy = 40.0 * this.sin(this.rz);
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;

		if (this.count >= 10)
		{
			this.Release();
		}

		return true;
	};
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.SetUpdateFunction(up_);
	this.hitEffect = this.Init_HitAssultRifle;
	this.hitEvent = function ()
	{
		this.PlaySE(1143);
		this.hitEvent = null;
		this.Release();
	};
}

function Init_AssultRifle( t )
{
	this.ShotInit(t);
	this.callbackMask = 2 | 8 | 4;
	this.SetMotion(51, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;

	if (this.rand() % 10 <= 4)
	{
		this.sy *= -1.0;
	}

	local up_ = function ()
	{
		this.count++;
		this.sx *= 0.89999998;
		this.sy *= 0.89999998;

		if (this.count >= 4)
		{
			this.Release();
		}

		return true;
	};
	this.SetUpdateFunction(up_);
}

function Init_AssultRifleBullet( t )
{
	this.ShotInit(t);
	this.SetMotion(52, 0);
	this.rz = t.rz + (5 - this.rand() % 11) * 0.017453292;
	this.vx = 60.0 * this.direction * this.cos(this.rz);
	this.vy = 60.0 * this.sin(this.rz);
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;

		if (this.count >= 60)
		{
			this.Release();
		}

		return true;
	};
	this.SetUpdateFunction(up_);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.hitEffect = this.Init_HitAssultRifle;
	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.PlaySE(1142);
		this.Release();
	};
}

function Init_AssultRifleBullet_Air( t )
{
	this.ShotInit(t);
	this.SetMotion(52, 1);
	this.rz = (5 - this.rand() % 11) * 0.017453292;
	this.vx = 60.0 * this.direction * this.cos(this.rz);
	this.vy = 60.0 * this.sin(this.rz);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.hitEffect = this.Init_HitAssultRifle;
	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.PlaySE(1142);
		this.Release();
	};
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;

		if (this.count >= 60)
		{
			this.Release();
		}

		return true;
	});
}

function Init_HitAssultRifle( t )
{
	this.ShotInit(t);
	this.rz = this.rand() % 360;
	this.SetMotion(53, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.sx *= 0.89999998;
		this.sy *= 0.89999998;

		if (this.count >= 6)
		{
			this.Release();
		}

		return true;
	});
}

function Drop_Rifle( t )
{
	this.ShotInit(t);
	this.SetMotion(52, t.flag1);
	this.vx = -0.0 * this.direction;
	this.vy = 0.0;
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.rz += -1.0 * 0.017453292;
		this.vy += 0.25;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Drop_Shell( t )
{
	this.ShotInit(t);
	this.SetMotion(52, 4);
	this.vx = -1.0 - this.rand() % 21 * 0.1;
	this.vy = -6.0 - this.rand() % 11 * 0.1;
	this.flag1 = -6.0 - this.rand() % 7;
	this.flag2 = function ()
	{
		this.hitEvent = null;
		this.vy *= -0.40000001;
		this.vx *= 0.69999999;
	};
	this.hitEvent = this.flag2;
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;
		this.rz += this.flag1;
		this.vy += 0.5;

		if (this.vy > 0.0)
		{
			this.callbackMask = 8 | 4;
			this.hitEvent = this.flag2;
		}
		else
		{
			this.callbackMask = 8;
		}

		if (this.count >= 60)
		{
			this.Release();
		}

		return true;
	});
}

function Init_RPG( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	this.SetMotion(54, 0);
	this.vx = 3.0 * this.cos(this.rz) * this.direction;
	this.vy = 3.0 * this.sin(this.rz);
	this.option = this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(54, 1);
		this.sx = 0.0;
		this.sy = 0.0;
		this.func = function ()
		{
			this.Release();
		};
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}

			this.sx += 0.1;

			if (this.sx > 2.0)
			{
				this.sx = 1.0;
			}

			this.sy = this.sx;
			return true;
		});
	}, this.DefaultShotTable());
	local up_ = function ()
	{
		if (this.option)
		{
			this.option.x = this.x;
			this.option.y = this.y;
			this.option.rz = this.rz;
		}

		if (this.UpdateStopCheck())
		{
			return false;
		}

		if (this.hitTop || this.hitBottom || this.hitLeft || this.hitRight)
		{
			this.hitEvent = null;
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Expload_A, this.DefaultShotTable());

			if (this.option)
			{
				if (this.option.func)
				{
					this.option.func();
				}
			}

			this.Release();
			return true;
		}

		local t = this.DefaultShotTable();
		t.rz = this.rz;
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_RPG_Smoke, t);
		this.count++;

		if (this.count >= 180)
		{
			if (this.option)
			{
				if (this.option.func)
				{
					this.option.func();
				}
			}

			this.Release();
			return false;
		}

		this.vx += this.cos(this.rz) * 0.75 * this.direction;
		this.vy += this.sin(this.rz) * 0.75;

		if (this.Abs(this.vx) >= 30)
		{
			this.vx = 30.0 * this.direction;
		}

		this.vy += 0.050000001;
		this.rz = this.atan2(this.vy, this.vx * this.direction);
		return true;
	};
	this.SetUpdateFunction(up_);
	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Expload_RPG, this.DefaultShotTable());

		if (this.option)
		{
			if (this.option.func)
			{
				this.option.func();
			}
		}

		this.Release();
	};
}

function Init_RPG_Smoke( t )
{
	this.ShotInit(t);
	this.rz = this.rand() % 360 * 0.017453292;
	this.sx = 0.5 + this.rand() % 40 * 0.0099999998;
	this.sy = this.sx;
	this.flag1 = 4.0 + this.rand() % 80 * 0.0099999998;
	this.vx = -this.flag1 * this.cos(t.rz) * this.direction;
	this.vy = -this.flag1 * this.sin(t.rz);
	this.SetMotion(54, 2);
	this.priority = 250;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.vx *= 0.98000002;
		this.vy *= 0.98000002;
		this.sx += 0.0099999998;
		this.sy = this.sx;

		if (this.alpha >= 0.029999999)
		{
			this.alpha -= 0.029999999;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Expload_RPG( t )
{
	this.ShotInit(t);
	this.PlaySE(2000);
	this.SetMotion(55, 0);
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(55, 2);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}

			this.sx += 0.0099999998;
			this.sy = this.sx;

			if (this.alpha > 0.025)
			{
				this.alpha -= 0.025;
			}
			else
			{
				this.Release();
			}

			return true;
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(55, 4);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(55, 5);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.30000001;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Effect_Smoke, t);
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.89999998;
		this.sy = this.sx;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
			this.blue -= 0.050000001;
			this.green -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Drop_RPG( t )
{
	this.ShotInit(t);
	this.SetMotion(54, 3);
	this.vx = -4.0 * this.direction;
	this.vy = -1.5;
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.rz += -3.0 * 0.017453292;
		this.vy += 0.25;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Init_GranadeUpper( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Granade);
	this.SetMotion(60, 0);
	this.collisionMask = 8 | 4;
	this.hitEvent = this.Hit_Granade;

	if (t.flag1 > 0)
	{
		this.vx = 8.0 * this.direction;
		this.vy = -14.0;
	}
	else
	{
		this.vx = 4.0 * this.direction;
		this.vy = -17.5;
	}
}

function Init_GranadeUnder( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Granade);
	this.SetMotion(60, 0);
	this.collisionMask = 8 | 4;
	this.hitEvent = this.Hit_Granade;
	this.collisionMask = 8;
	this.vx = 4.0 * this.direction;

	if (t.flag1 > 0)
	{
		this.vx = 12.0 * this.direction;
	}

	this.vy = 2.5;
}

function Granade()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.rz += 17.5 * 0.017453292;
	this.vy += 0.75;
	this.vx *= 0.99000001;

	if (this.hitEvent)
	{
		if (this.hitTop || this.hitBottom || this.hitLeft || this.hitRight)
		{
			if (this.vx * this.vx + this.vy * this.vy <= 10.0 * 10.0)
			{
				this.Hit_Granade();
				return true;
			}
			else if (this.hitTop && this.vy < 0.0 || this.hitBottom && this.vy > 0.0)
			{
				this.vy *= -0.5;
			}
			else if (this.hitRight && this.vx > 0.0 || this.hitLeft && this.vx < 0.0)
			{
				this.vx *= -0.5;
			}
		}
	}

	return true;
}

function Hit_Granade()
{
	this.hitEvent = null;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Expload_Granade, this.DefaultShotTable());
	this.Release();
}

function Expload_Granade( t )
{
	this.ShotInit(t);
	this.PlaySE(2000);
	this.SetMotion(61, 0);
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(61, 2);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}

			this.sx += 0.0099999998;
			this.sy = this.sx;

			if (this.alpha > 0.075000003)
			{
				this.alpha -= 0.075000003;
			}
			else
			{
				this.Release();
			}

			return true;
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(61, 4);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(61, 5);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.89999998;
		this.sy = this.sx;

		if (this.alpha > 0.1)
		{
			this.alpha -= 0.1;
			this.blue -= 0.1;
			this.green -= 0.1;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Init_Mortar( t )
{
	this.ShotInit(t);
	this.flag1 = t.flag1;
	this.keyFlag = true;
	this.SetMotion(65, 0);
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.vy += 0.75;

		if (this.y >= this.flag1)
		{
			this.vy = 0;
			this.y = this.flag1;
		}

		if (this.keyTake == 1)
		{
			if (this.keyFlag)
			{
				this.PlaySE(1140);
				this.keyFlag = false;
				this.world2d.CreateActor(this.x + 36 * this.direction, this.y - 65, this.direction, this.Init_MortarShell, this.DefaultShotTable());
			}

			if (this.alpha > 0.1)
			{
				this.alpha -= 0.1;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	};
	this.SetUpdateFunction(up_);
}

function Init_MortarShell( t )
{
	this.ShotInit(t);
	this.SetMotion(66, 0);
	this.callbackMask = 2 | 8;
	this.hitEvent = this.Hit_Mortar;
	this.vx = 14.0 * this.direction;
	this.vy = -30.0;
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		if (this.vy > 0.0)
		{
			this.callbackMask = 2 | 8 | 4;
		}

		local t = this.DefaultShotTable();
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_MortarShell_Smoke, t);
		this.vy += 1.0;
		this.vx *= 0.98000002;
		return true;
	};
	this.SetUpdateFunction(up_);
}

function Init_MortarShell_Smoke( t )
{
	this.ShotInit(t);
	this.rz = this.rand() % 360 * 0.017453292;
	this.sx = 0.5 + this.rand() % 40 * 0.0099999998;
	this.sy = this.sx;
	this.priority = 250;
	this.flag1 = 2.0 + this.rand() % 20 * 0.0099999998;
	this.vx = -this.flag1 * this.cos(t.rz) * this.direction;
	this.vy = -this.flag1 * this.sin(t.rz);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetMotion(66, 2);
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.vx *= 0.98000002;
		this.vy *= 0.98000002;
		this.vy -= 0.1;
		this.sx += 0.0099999998;
		this.sy = this.sx;

		if (this.alpha >= 0.029999999)
		{
			this.alpha -= 0.029999999;
		}
		else
		{
			this.Release();
		}

		return true;
	};
	this.SetUpdateFunction(up_);
}

function Hit_Mortar()
{
	this.hitEvent = null;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Expload_Mortar, this.DefaultShotTable());
	this.Release();
}

function Expload_Mortar( t )
{
	this.ShotInit(t);
	this.PlaySE(2000);
	this.SetMotion(67, 0);
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(67, 2);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}

			this.sx += 0.0099999998;
			this.sy = this.sx;

			if (this.alpha > 0.075000003)
			{
				this.alpha -= 0.075000003;
			}
			else
			{
				this.Release();
			}

			return true;
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(67, 4);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(67, 5);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.30000001;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Effect_Smoke, t);
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.89999998;
		this.sy = this.sx;

		if (this.alpha > 0.1)
		{
			this.alpha -= 0.1;
			this.blue -= 0.1;
			this.green -= 0.1;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Init_Expload_A( t )
{
	this.ShotInit(t);
	this.PlaySE(2000);
	this.SetMotion(55, 0);
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;

		if (this.keyTake == 0)
		{
			if (this.count >= 10)
			{
				this.SetMotion(this.motion, 1);
				this.count = 0;
			}
		}
		else
		{
			this.sx *= 0.89999998;
			this.sy *= 0.89999998;

			if (this.count >= 20)
			{
				this.Release();
			}
		}

		return true;
	};
	this.SetUpdateFunction(up_);
}

function Hit_Expload_A()
{
	this.hitEvent = null;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Expload_A, this.DefaultShotTable());
	this.Release();
}

function Mami_Ribbon_2B( t )
{
	this.ShotInit(t);
	this.SetMotion(357, 0);
	this.func = function ()
	{
		this.Release();
	};

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[1] != null)
		{
			if (this.actor[this.owner].func)
			{
				this.actor[this.owner].func();
			}
		}

		this.actor[this.owner].option[1] = this;
	}

	this.SetUpdateFunction(function ()
	{
		if (this.owner in ::actor)
		{
			local p_ = this.actor[this.owner];

			if (p_.motion != 332 && p_.motion != 333)
			{
				if (this.actor[this.owner].option[1] == this)
				{
					this.actor[this.owner].option[1] = null;
				}

				this.Release();
				return;
			}

			this.x = p_.x;
			this.y = p_.y;
			this.direction = p_.direction;

			if (this.keyTake == 1)
			{
				if (p_.keyTake >= 2)
				{
					this.SetMotion(357, 2);
				}
			}
		}
		else
		{
			if (this.actor[this.owner].option[1] == this)
			{
				this.actor[this.owner].option[1] = null;
			}

			this.Release();
		}

		return true;
	});
	this.SetEndMotionCallbackFunction(function ()
	{
		if (this.actor[this.owner].option[1] == this)
		{
			this.actor[this.owner].option[1] = null;
		}

		this.Release();
	});
}

function Init_Mami_A( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_A);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.SetMotion(350, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;

	if (this.rand() % 10 <= 4)
	{
		this.sy *= -1.0;
	}
}

function Mami_A()
{
	this.count++;
	this.sx *= 0.89999998;
	this.sy *= 0.89999998;

	if (this.count >= 4)
	{
		this.Release();
	}

	return true;
}

function Init_Mami_ShotA( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_ShotA);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.SetMotion(360, 0);
	this.rz = -5.0 * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
}

function Mami_ShotA()
{
	this.count++;
	this.sx *= 0.89999998;
	this.sy *= 0.89999998;

	if (this.count >= 4)
	{
		this.Release();
	}

	return true;
}

function Mami_RushBack( t )
{
	this.ShotInit(t);
	this.priority = 150;
	this.SetMotion(355, 0);
	this.func = function ()
	{
		if (this.keyTake < 6)
		{
			this.SetMotion(this.motion, this.keyTake + 1);
		}
		else
		{
			if (this.owner in ::actor)
			{
				if (this.actor[this.owner].option[0] == this)
				{
					this.actor[this.owner].option[0] = null;
				}
			}

			this.Release();
		}
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in ::actor)
		{
			this.x = this.actor[this.owner].x;
			this.y = this.actor[this.owner].y;
			this.direction = this.actor[this.owner].direction;

			if (this.actor[this.owner].motion != 322)
			{
				if (this.actor[this.owner].option[0] == this)
				{
					this.actor[this.owner].option[0] = null;
				}

				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Mami_RushBack_Air( t )
{
	this.ShotInit(t);
	this.priority = 150;
	this.SetMotion(356, 0);
	this.func = function ()
	{
		if (this.keyTake < 6)
		{
			this.SetMotion(this.motion, this.keyTake + 1);
		}
		else
		{
			if (this.owner in ::actor)
			{
				if (this.actor[this.owner].option[0] == this)
				{
					this.actor[this.owner].option[0] = null;
				}
			}

			this.Release();
		}
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in ::actor)
		{
			this.x = this.actor[this.owner].x;
			this.y = this.actor[this.owner].y;
			this.direction = this.actor[this.owner].direction;

			if (this.actor[this.owner].motion != 323)
			{
				if (this.actor[this.owner].option[0] == this)
				{
					this.actor[this.owner].option[0] = null;
				}

				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Init_Mami_ChargeGun( t )
{
	this.ShotInit(t);
	this.count = t.flag1 * 2;
	this.priority = t.priority;
	this.vx = 10.0 * this.direction;
	this.SetMotion(354, 0);
	local table_ = this.DefaultShotTable();
	table_.priority = t.priority;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_ChargeGun_Spark, table_);
	this.SetUpdateFunction(function ()
	{
		switch(this.flag1)
		{
		case 0:
			if (this.actor[this.owner].motion != 324 && this.actor[this.owner].motion != 325)
			{
				this.flag1 = 2;
				this.vx = 0.1 * (this.rand() % 30) - 1.5;
				this.flag2 = 0.40000001 + this.rand() % 10 * 0.1;
				this.flag3 = 0.1 - this.rand() % 20 * 0.0099999998;
			}
			else
			{
				if (this.actor[this.owner].keyTake == 2)
				{
					this.flag1 = 1;
					this.vx = 0.0;
				}

				this.vx *= 0.69999999;
			}

			break;

		case 1:
			this.count--;

			if (this.count >= 0)
			{
				if (this.count == 0)
				{
					this.PlaySE(1300);
					local t = this.DefaultShotTable();
					t.flag1 = 4;
					t.rz = 3.141592 * 0.5;
					t.scale = 0.5;
					this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
					this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Init_Mami_ChargeFireBullet, this.DefaultShotTable());
				}
			}
			else if (this.alpha >= 0.050000001)
			{
				this.alpha -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;

		case 2:
			this.vy += this.flag2;
			this.rz += this.flag3;

			if (this.alpha >= 0.050000001)
			{
				this.alpha -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Mami_ChargeGun_Spark( t )
{
	this.ShotInit(t);
	this.priority = 300;
	this.SetMotion(354, 1 + this.rand() % 5);
	this.SetEndTakeCallbackFunction(function ()
	{
		local t = 1 + this.rand() % 5;

		if (t == this.keyTake)
		{
			t++;

			if (t > 5)
			{
				t = 1;
			}
		}

		this.SetMotion(354, t);
	});
	this.SetUpdateFunction(function ()
	{
		this.count++;

		if (this.count >= 2)
		{
			if (this.alpha > 0.2)
			{
				this.alpha -= 0.2;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function Mami_ChargeFireEffect( t )
{
	this.ShotInit(t);
	this.SetMotion(351, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;

	if (this.rand() % 10 <= 4)
	{
		this.sy *= -1.0;
	}

	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.sx *= 0.89999998;
		this.sy *= 0.89999998;

		if (this.count >= 4)
		{
			this.Release();
		}

		return true;
	});
}

function Init_Mami_ChargeFireBullet( t )
{
	this.ShotInit(t);
	this.SetMotion(352, 0);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.hitEvent = this.CommonShotHit;
	this.rz = (5 - this.rand() % 11) * 0.017453292;
	this.vx = 60.0 * this.direction * this.cos(this.rz);
	this.vy = 60.0 * this.sin(this.rz);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_ChargeFireEffect, this.DefaultShotTable());
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		if (this.hitTop || this.hitBottom || this.hitLeft || this.hitRight)
		{
			this.Hit_Rifle();
			return true;
		}

		this.count++;

		if (this.count >= 60)
		{
			this.Release();
		}

		return true;
	});
}

function Init_Mami_ChargeHit( t )
{
	this.ShotInit(t);
	this.rz = this.rand() % 360;
	this.SetMotion(353, 0);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.sx *= 0.89999998;
		this.sy *= 0.89999998;

		if (this.count >= 6)
		{
			this.Release();
		}

		return true;
	});
}

function Init_Mami_ShotB( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_ShotA);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.SetMotion(370, 0);
	this.rz = 30.0 * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
}

function Init_Mami_ShotC( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_ShotA);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.SetMotion(380, 0);
	this.rz = -60.0 * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
}

function Init_Mami_Shot8B( t )
{
	this.ShotInit(t);
	this.SetMotion(381, 0);
	this.rz = t.rz;
	this.vx = 35.0 * this.cos(this.rz) * this.direction;
	this.vy = 35.0 * this.sin(this.rz);
	local t2 = this.DefaultShotTable();
	t2.rz = this.rz;
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( a )
	{
		this.ShotInit(a);
		this.rz = a.rz;
		this.SetMotion(382, 0);
		this.SetEndMotionCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			return true;
		});
	}, t2);
	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_Expload8B, this.DefaultShotTable());
		this.Release();
	};
	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.vy += 0.5;

		if (this.count >= 6 && this.hitEvent)
		{
			this.hitEvent();
		}

		return true;
	});
}

function Mami_Expload8B( t )
{
	this.ShotInit(t);
	this.SetMotion(381, 2);
	this.rz = t.rz;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
}

function Init_Mami_TrushGun( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_TrushGun);
	this.SetMotion(399, 0);
	this.vx = (-6.0 + this.rand() % 20 * 0.1) * this.direction;
	this.vy = -4.0 + this.rand() % 10 * 0.1;
}

function Mami_TrushGun()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.vy += 0.30000001;
	this.rz -= 0.2;

	if (this.alpha >= 0.050000001)
	{
		this.alpha -= 0.050000001;
	}
	else
	{
		this.Release();
	}

	return true;
}

function Init_Mami_Magic( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Mami_Magic);
	this.hitEffect = this.Init_Mami_ChargeHit;
	this.SetMotion(390, 0);
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		null,
		null,
		this.EndtoRelease
	];
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
}

function Mami_Magic()
{
	if (this.keyTake <= 1)
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].motion == 340)
			{
				if (this.actor[this.owner].keyTake <= 3)
				{
					this.count++;

					if (this.count % 10 == 0)
					{
						this.HitReset();
					}

					this.x = this.actor[this.owner].point0_x;
					this.y = this.actor[this.owner].point0_y;
				}
				else
				{
					this.SetMotion(390, 2);
				}
			}
			else
			{
				this.SetMotion(390, 2);
			}
		}
	}

	return true;
}

function Mami_Ribbon( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 4);
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (t_.motion != 340)
			{
				this.Release();
				return true;
			}
			else if (t_.keyTake != 0)
			{
				this.Release();
				return true;
			}

			this.x = t_.x;
			this.y = t_.y;
			this.direction = t_.direction;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Mami_Canon( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 3);
	this.priority = 150;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (t_.motion != 340)
			{
				this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_CanonLost, this.DefaultShotTable());
				this.Release();
				return true;
			}
			else if (t_.keyTake >= 4)
			{
				this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_CanonLost, this.DefaultShotTable());
				this.Release();
				return true;
			}

			this.x = t_.x;
			this.y = t_.y;
			this.direction = t_.direction;
		}
		else
		{
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_CanonLost, this.DefaultShotTable());
			this.Release();
		}

		return true;
	});
}

function Mami_Hammer( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 8);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (t_.motion != 340)
			{
				this.Release();
				return true;
			}
			else
			{
				if (t_.keyTake >= 2)
				{
					if (this.rz >= 3.141592 / 2)
					{
						this.rz = 3.141592 / 2;
					}
					else
					{
						this.rz += 3.141592 / 12;

						if (this.rz >= 3.141592 / 2)
						{
							this.rz = 3.141592 / 2;
							this.world2d.CreateActor(t_.point2_x + t_.vx, t_.point2_y + t_.vy, this.direction, this.Mami_HammerFire, this.DefaultShotTable());
						}
					}
				}

				if (t_.keyTake >= 4)
				{
					this.Release();
					return true;
				}
			}

			this.x = t_.point1_x;
			this.y = t_.point1_y;
			this.direction = t_.direction;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Mami_HammerFire( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 9);
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.80000001;
		this.sy = this.sx;
		this.count++;

		if (this.count % 4 == 0)
		{
			this.rz = this.rand() % 360 * 0.017453292;
		}

		if (this.count >= 8)
		{
			this.Release();
		}

		return true;
	});
}

function Mami_CanonFlash( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 6);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		this.sx += 0.0099999998;
		this.sy = this.sx;
		this.count++;

		if (this.count >= 5)
		{
			if (this.alpha > 0.1)
			{
				this.alpha -= 0.1;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function Mami_CanonLost( t )
{
	this.ShotInit(t);
	this.SetMotion(390, 7);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function Kyouko_Blade_Rush( t )
{
	this.ShotInit(t);
	this.SetMotion(250, t.flag1);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 22 || o_.motion == o_.u.CA + 23)
			{
				this.x = o_.x;
				this.y = o_.y;
				this.direction = o_.direction;
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Kyouko_Stab( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(251, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.priority = 300;

	if (t.flag1 == 5)
	{
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
	}

	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 0:
		case 2:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 24 || o_.motion == o_.u.CA + 25)
				{
					if (this.keyTake == 0 && o_.keyTake == 3 || this.keyTake == 2 && o_.keyTake == 6)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.Release();
					}
				}
				else
				{
					this.Release();
				}
			}

			break;

		case 4:
			this.sx += this.flag2;
			this.sy = this.sx;
			this.flag2 *= 0.92000002;

			if (this.alpha > 0.079999998)
			{
				this.alpha -= 0.079999998;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Kyouko_Blade_6A( t )
{
	this.ShotInit(t);
	this.SetMotion(252, t.flag1);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 30 || o_.motion == o_.u.CA + 31)
			{
				if (this.keyTake == 0 && o_.keyTake <= 1 || this.keyTake == 1 && (o_.keyTake == 2 || o_.keyTake == 3))
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
				}
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Kyouko_Blade_8A( t )
{
	this.ShotInit(t);
	this.SetMotion(253, 0);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 34 || o_.motion == o_.u.CA + 35)
			{
				if (o_.keyTake <= 1)
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
				}
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Kyouko_Blade_2A( t )
{
	this.ShotInit(t);
	this.SetMotion(254, 0);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 32)
			{
				if (o_.keyTake <= 1)
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
				}
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Kyouko_Blade_2A_Air( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(255, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.rz = t.rz;
	this.priority = 300;

	if (t.flag1 == 5)
	{
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
	}

	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 0:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 33)
				{
					if (this.keyTake == 0 && o_.keyTake <= 1)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.Release();
					}
				}
				else
				{
					this.Release();
				}
			}

			break;

		case 2:
			this.sx += this.flag2;
			this.sy = this.sx;
			this.flag2 *= 0.92000002;

			if (this.alpha > 0.079999998)
			{
				this.alpha -= 0.079999998;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Kyouko_2B_Rock( t )
{
	this.ShotInit(t);
	this.flag1 = 0.25;
	this.SetMotion(255, 2);
	this.sx = t.scale;
	this.sy = this.sx;
	this.priority = 300;

	for( local i = 0; i < 6; i++ )
	{
		local t = this.DefaultShotTable();
		t.rz = (-30 * i - this.rand() % 20) * 0.017453292;
		this.world2d.CreateActor(this.x, this.y, this.direction, function ( t_ )
		{
			this.ShotInit(t_);
			this.SetMotion(255, 3 + this.rand() % 3);
			this.sx = this.sy = 0.75 + this.rand() % 50 * 0.0099999998;
			this.rz = this.rand() % 360 * 0.017453292;
			this.flag1 = 10.0 + this.rand() % 7;
			this.vx = this.flag1 * this.cos(t_.rz);
			this.vy = this.flag1 * this.sin(t_.rz);
			this.flag2 = 30 + this.rand() % 15;
			this.SetUpdateFunction(function ()
			{
				this.count++;

				if (this.count >= this.flag2)
				{
					this.Release();
				}

				this.vy += 0.75;
				return true;
			});
		}, t);
	}

	this.SetUpdateFunction(function ()
	{
		this.sx += this.flag1;
		this.sy = this.sx;
		this.flag1 *= 0.5;
		this.count++;

		if (this.count >= 10)
		{
			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
			}
			else
			{
				this.Release();
			}
		}
	});
}

function Kyouko_ChargeFire( t )
{
	this.ShotInit(t);
	this.SetMotion(256, t.flag1);
	this.priority = t.flag2;
	this.sx = this.sy = t.scale;
	this.alpha = 0.75;
	this.rz = t.rz;

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[0])
		{
			if (this.actor[this.owner].option[0].func)
			{
				this.actor[this.owner].option[0].func();
			}
		}

		this.actor[this.owner].option[0] = this;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		null,
		null,
		this.EndtoRelease,
		null,
		null,
		this.EndtoRelease,
		null,
		null,
		this.EndtoRelease
	];
	this.func = function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].option[0] == this)
			{
				this.actor[this.owner].option[0] = null;
			}
		}

		this.SetMotion(this.motion, 2);
		this.func = null;
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			switch(this.keyTake)
			{
			case 0:
			case 1:
			case 3:
			case 4:
			case 6:
			case 7:
				if (t_.motion != 224 && t_.motion != 225)
				{
					this.func();
				}
				else if (t_.keyTake == 1)
				{
					this.x = t_.point0_x;
					this.y = t_.point0_y;
				}
				else if (this.func)
				{
					this.func();
				}

				break;
			}
		}
		else if (this.func)
		{
			this.func();
		}

		return true;
	});
}

function Init_Kyouko_Magic( t )
{
	this.ShotInit(t);
	this.flag1 = t.flag1;
	this.SetUpdateFunction(this.Kyouok_Magic);
	this.hitEvent = this.CommonShotHit;
	this.SetMotion(290, 0);
	this.sx = this.cos(this.flag1);
}

function Kyouok_Magic()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.flag1 += 0.025 * 3.141592;
	this.sx = this.cos(this.flag1);
	this.count++;

	if (this.count >= 300)
	{
		this.Release();
	}

	return true;
}

function Init_Madoka_Arrow( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	local Vec = 25.0 + this.rand() % 50 * 0.1;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.SetUpdateFunction(this.Madoka_ArrowA);
	this.SetMotion(450, 0);
	this.hitEvent = function ()
	{
		this.PlaySE(1509);
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());
		this.hitEvent = null;
		this.Release();
	};
}

function Init_Madoka_ArrowRush( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	local Vec = 25.0 + this.rand() % 50 * 0.1;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.SetUpdateFunction(this.Madoka_ArrowA);
	this.SetMotion(451, 0);
	this.hitEvent = function ()
	{
		this.PlaySE(1509);
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());
		this.hitEvent = null;
		this.Release();
	};
}

function Madoka_ArrowA()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	if (this.Abs(this.vx) >= 3.0)
	{
		this.vx -= this.vx > 0.0 ? 0.30000001 : -0.30000001;
	}

	this.vy += 0.5;
	this.rz = this.atan2(this.vy, this.vx * this.direction);
	this.SetCollisionRotation(0.0, 0.0, this.rz);

	if (this.y > this.camera2d.bottom)
	{
		this.Release();
		return false;
	}

	return true;
}

function Init_Madoka_ChargeArrow( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	this.flag1 = 3;
	local Vec = 30.0 + this.rand() % 50 * 0.1;

	switch(t.flag1)
	{
	case 0:
		this.SetMotion(452, 0);
		break;

	case 1:
		this.SetMotion(452, 1);
		this.flag1 = 0;
		break;

	case 2:
		this.SetMotion(452, 2);
		this.flag1 = 0;
		break;
	}

	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.hitEvent = this.Hit_Madoka_ChargeArrow;
	this.SetUpdateFunction(this.Madoka_ArrowCharge);
	local t = this.DefaultShotTable();
	t.rz = this.rz;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_FireEffect, t);
}

function Madoka_ArrowCharge()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.count++;

	if (this.count >= 180)
	{
		this.Release();
	}

	return true;
}

function Hit_Madoka_ChargeArrow()
{
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());

	if (this.flag1)
	{
		if (this.hitTarget.len() >= this.flag1)
		{
			this.Release();
		}
	}
}

function Init_Madoka_Arrow6B( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	this.rz += (5.0 - this.rand() % 11) * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	local Vec = 30.0 + this.rand() % 50 * 0.1;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetUpdateFunction(this.Madoka_ArrowB);
	this.SetMotion(453, 0);
	this.hitEvent = function ()
	{
		this.PlaySE(1510);
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());
		this.hitEvent = null;
		this.Release();
	};
	local t = this.DefaultShotTable();
	t.rz = this.rz;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_FireEffect, t);
}

function Madoka_ArrowB()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	if (this.Abs(this.vx) >= 3.0)
	{
		this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
	}

	this.vy += 0.1;
	this.rz = this.atan2(this.vy, this.vx * this.direction);
	this.SetCollisionRotation(0.0, 0.0, this.rz);

	if (this.y > this.camera2d.bottom)
	{
		this.Release();
		return false;
	}

	return true;
}

function Init_Madoka_ArrowFall( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	this.rz += (5.0 - this.rand() % 11) * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	local Vec = 25.0 + this.rand() % 50 * 0.1;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetUpdateFunction(this.Madoka_ArrowFall);
	this.SetMotion(455, 0);
	this.hitEvent = function ()
	{
		this.PlaySE(1510);
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());
		this.hitEvent = null;
		this.Release();
	};
	local t = this.DefaultShotTable();
	t.rz = this.rz;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_FireEffect, t);
}

function Madoka_ArrowFall()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	if (this.Abs(this.vx) >= 4.0)
	{
		this.vx -= this.vx > 0.0 ? 0.5 : -0.5;
	}

	this.vy += 0.5;
	this.rz = this.atan2(this.vy, this.vx * this.direction);
	this.SetCollisionRotation(0.0, 0.0, this.rz);

	if (this.y > this.camera2d.bottom)
	{
		this.Release();
		return false;
	}

	return true;
}

function Init_Madoka_FireEffect( t )
{
	this.ShotInit(t);
	this.rz = t.rz;
	this.SetUpdateFunction(this.Madoka_FireEffect);
	this.SetMotion(459, 0);
}

function Madoka_FireEffect()
{
	this.sx += 0.25;
	this.sy = this.sx;

	if (this.alpha > 0.1)
	{
		this.alpha -= 0.1;
		this.green -= 0.1;
	}
	else
	{
		this.Release();
	}
}

function Init_Madoka_MagicArrow( t )
{
	this.ShotInit(t);
	this.rz = -3.141592 * 0.5;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	local Vec = 40.0;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetUpdateFunction(this.Madoka_MagicArrow);
	this.SetMotion(460, 0);
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t_ )
	{
		this.ShotInit(t_);
		this.SetMotion(463, 0);
		this.SetUpdateFunction(function ()
		{
			return true;
		});
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t_ )
	{
		this.ShotInit(t_);
		this.SetMotion(463, 1);
		this.SetUpdateFunction(function ()
		{
			return true;
		});
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
	}, this.DefaultShotTable());
}

function Madoka_MagicArrow()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.count++;

	if (this.count >= 20)
	{
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_MagicCore, this.DefaultShotTable());
		this.Release();
	}

	return true;
}

function Init_Madoka_MagicCore( t )
{
	this.ShotInit(t);
	this.SetUpdateFunction(this.Madoka_MagicCore);
	this.SetMotion(462, 0);
}

function Madoka_MagicCore()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.count++;

	if (this.count % 4 == 0)
	{
		this.rz = 0.017453292 * this.rand() % 360;
		this.sx = 0.80000001 + 0.0099999998 * (this.rand() % 40);
		this.sy = this.sx;
	}

	if (this.count % 2 == 0)
	{
		if (this.count % 4 == 0)
		{
			this.PlaySE(1508);
		}

		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_MagicArrowF, this.DefaultShotTable());
	}

	if (this.count >= 120)
	{
		this.Release();
	}

	return true;
}

function Init_Madoka_MagicArrowF( t )
{
	this.ShotInit(t);
	this.rz = 3.141592 * 0.5 + (10.0 - this.rand() % 21) * 0.017453292;
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	local Vec = 40.0;
	this.vx = Vec * this.cos(this.rz) * this.direction;
	this.vy = Vec * this.sin(this.rz);
	this.SetUpdateFunction(this.Madoka_MagicArrowF);
	this.SetMotion(461, 0);
	this.hitEvent = function ()
	{
		this.PlaySE(1510);
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Init_Madoka_ArrowHit, this.DefaultShotTable());
		this.hitEvent = null;
		this.Release();
	};
}

function Madoka_MagicArrowF()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.count++;

	if (this.count >= 120)
	{
		this.Release();
		return false;
	}

	return true;
}

function Init_Madoka_ArrowHit( t )
{
	this.ShotInit(t);
	this.rz = this.rand() % 360 * 0.017453292;
	this.SetUpdateFunction(this.Madoka_ArrowHit);
	this.SetMotion(470, 0);
}

function Madoka_ArrowHit()
{
	this.count++;
	this.sx *= 0.69999999;
	this.sy = this.sx;

	if (this.count >= 5)
	{
		this.Release();
	}

	return true;
}

function Init_Madoka_ShotFoot( t )
{
	this.ShotInit(t);
	this.SetMotion(480, 0);
	this.priority = 150;

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[0])
		{
			this.actor[this.owner].option[0].func();
		}

		this.actor[this.owner].option[0] = this;
	}

	this.func = function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].option[0] == this)
			{
				this.actor[this.owner].option[0] = null;
			}
		}

		this.Release();
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];
			this.x = t_.x;
			this.y = t_.y;

			if (t_.motion < 420)
			{
				this.func();
			}
		}
		else
		{
			this.func();
		}

		return true;
	});
}

function Madoka_SetArrow( t )
{
	this.ShotInit(t);
	this.SetMotion(491, 1);
	this.priority = 300;
	this.rz = t.rz;

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[2])
		{
			this.actor[this.owner].option[2].func();
		}

		this.actor[this.owner].option[2] = this;
	}

	this.func = function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].option[2] == this)
			{
				this.actor[this.owner].option[2] = null;
			}
		}

		this.Release();
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (this.keyTake <= 3)
			{
				this.x = t_.point2_x;
				this.y = t_.point2_y;
			}

			if (t_.motion < 420)
			{
				this.func();
			}
		}
		else
		{
			if (this.owner in this.actor)
			{
				if (this.actor[this.owner].option[2] == this)
				{
					this.actor[this.owner].option[2] = null;
				}
			}

			this.SetMotion(490, 4);
			this.func = null;
		}

		return true;
	});
}

function Madoka_ChageUpEffect( t )
{
	this.ShotInit(t);
	this.SetMotion(490, t.flag1);
	this.priority = 200;
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.89999998;
		this.sy = this.sx;
		this.count++;

		if (this.count >= 10)
		{
			this.Release();
		}
	});
}

function Madoka_ChargeFire( t )
{
	this.ShotInit(t);
	this.SetMotion(490, t.flag1);
	this.priority = 300;
	this.rz = t.rz;

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[1])
		{
			if (this.actor[this.owner].option[1].func)
			{
				this.actor[this.owner].option[1].func();
			}
		}

		this.actor[this.owner].option[1] = this;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		null,
		null,
		this.EndtoRelease,
		null,
		null,
		this.EndtoRelease,
		null,
		null,
		this.EndtoRelease
	];
	this.func = function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].option[1] == this)
			{
				this.actor[this.owner].option[1] = null;
			}
		}

		this.SetMotion(this.motion, this.keyTake + 1);
		this.func = null;
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (this.keyTake == 1 || this.keyTake == 4 || this.keyTake == 7)
			{
				this.x = t_.point1_x;
				this.y = t_.point1_y;

				if (t_.motion < 420)
				{
					this.func();
				}
			}
			else if (this.func)
			{
				this.func();
			}
		}
		else if (this.func)
		{
			this.func();
		}

		return true;
	});
}

function Sayaka_Blade_NA( t )
{
	this.ShotInit(t);
	this.SetMotion(150, 0);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 20 || o_.motion == o_.u.CA + 21)
			{
				this.x = o_.x;
				this.y = o_.y;
				this.direction = o_.direction;
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Sayaka_Blade_Rush( t )
{
	this.ShotInit(t);
	this.SetMotion(150, t.flag1);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 22 || o_.motion == o_.u.CA + 23)
			{
				this.x = o_.x;
				this.y = o_.y;
				this.direction = o_.direction;
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Sayaka_Stab( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(151, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 0:
		case 2:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 24 || o_.motion == o_.u.CA + 25)
				{
					if (this.keyTake == 0 && o_.keyTake == 2 || this.keyTake == 2 && o_.keyTake == 4)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.SetMotion(151, 1);
					}
				}
				else
				{
					this.SetMotion(151, 1);
				}
			}

			break;

		case 4:
			this.sx *= 1.1;
			this.sy *= 0.80000001;

			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
				this.red -= 0.050000001;
				this.green -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;

		case 5:
			this.sx += this.flag2;
			this.sy = this.sx;
			this.flag2 *= 0.92000002;

			if (this.alpha > 0.079999998)
			{
				this.alpha -= 0.079999998;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Sayaka_ChargeEffect( t )
{
	this.ShotInit(t);
	this.SetMotion(155, t.flag1);
	this.priority = 50;
	this.flag1 = 0;
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			if (this.flag1 == 0)
			{
				local p_ = this.actor[this.owner];

				if (p_.motion == p_.u.CA + 24 || p_.motion == p_.u.CA + 25)
				{
					if (p_.keyTake == 1)
					{
						this.x = p_.x;
						this.y = p_.y;
					}
					else
					{
						this.flag1 = 1;
					}
				}
				else
				{
					this.flag1 = 1;
				}
			}
		}
		else
		{
			this.flag1 = 1;
		}

		if (this.flag1 == 1)
		{
			if (this.alpha > 0.1)
			{
				this.alpha -= 0.1;
				this.red -= 0.1;
				this.green -= 0.1;
				this.sx *= 1.1;
				this.sy = this.sx;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function Sayaka_Stab_Upper( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(152, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.rz = t.rz;
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 0:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 34 || o_.motion == o_.u.CA + 35)
				{
					if (this.keyTake == 0 && o_.keyTake == 1)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.SetMotion(152, 1);
					}
				}
				else
				{
					this.SetMotion(152, 1);
				}
			}

			break;

		case 2:
			this.sx *= 1.1;
			this.sy *= 0.80000001;

			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
				this.red -= 0.050000001;
				this.green -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Sayaka_Stab_Under( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(153, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.rz = t.rz;
	this.priority = 300;

	if (this.keyTake <= 2)
	{
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
	}

	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 0:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 32 || o_.motion == o_.u.CA + 33)
				{
					if (this.keyTake == 0 && o_.keyTake <= 2)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.SetMotion(153, 1);
					}
				}
				else
				{
					this.SetMotion(153, 1);
				}
			}

			break;

		case 2:
			this.sx *= 1.1;
			this.sy *= 0.80000001;

			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
				this.red -= 0.050000001;
				this.green -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;

		case 3:
			break;

		case 4:
			this.count++;

			if (this.count >= 5)
			{
				if (this.alpha > 0.1)
				{
					this.alpha -= 0.1;
					this.red -= 0.1;
					this.green -= 0.1;
					this.sx *= 1.1;
					this.sy = this.sx;
				}
				else
				{
					this.Release();
				}
			}

			break;
		}

		return true;
	});
}

function Sayaka_Blade_6B( t )
{
	this.ShotInit(t);
	this.SetMotion(154, 0);
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (o_.motion == o_.u.CA + 30 || o_.motion == o_.u.CA + 31)
			{
				this.x = o_.x;
				this.y = o_.y;
				this.direction = o_.direction;
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Sayaka_Magic( t )
{
	this.ShotInit(t);
	this.SetMotion(160, 0);
	this.priority = 300;
	this.flag1 = 0;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (this.flag1)
			{
				if (this.alpha > 0.1)
				{
					this.alpha -= 0.1;
				}
				else
				{
					this.Release();
				}
			}

			if (o_.motion == o_.u.CA + 40 || o_.motion == o_.u.CA + 41)
			{
				if (o_.keyTake <= 1)
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
				}
				else
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
					this.flag1 = 1;
				}
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Sayaka_Magic_Stab( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.SetMotion(161, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		switch(this.keyTake)
		{
		case 2:
			if (this.owner in this.actor)
			{
				local o_ = this.actor[this.owner];

				if (o_.motion == o_.u.CA + 42 || o_.motion == o_.u.CA + 43)
				{
					if (o_.keyTake == 1)
					{
						this.x = o_.x + o_.vx;
						this.y = o_.y + o_.vy;
						this.direction = o_.direction;
					}
					else
					{
						this.SetMotion(161, 1);
					}
				}
				else
				{
					this.SetMotion(161, 1);
				}
			}

			break;

		case 4:
			this.sx *= 1.1;
			this.sy *= 0.80000001;

			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
				this.red -= 0.050000001;
				this.green -= 0.050000001;
			}
			else
			{
				this.Release();
			}

			break;

		case 5:
			this.sx += this.flag2;
			this.sy = this.sx;
			this.flag2 *= 0.92000002;

			if (this.alpha > 0.079999998)
			{
				this.alpha -= 0.079999998;
			}
			else
			{
				this.Release();
			}

			break;
		}

		return true;
	});
}

function Sayaka_Magic_StabBaria( t )
{
	this.ShotInit(t);
	this.SetMotion(162, 0);
	this.priority = 300;
	this.flag1 = 0;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local o_ = this.actor[this.owner];

			if (this.flag1)
			{
				if (this.alpha > 0.1)
				{
					this.alpha -= 0.1;
				}
				else
				{
					this.Release();
				}
			}

			if (o_.motion == o_.u.CA + 42 || o_.motion == o_.u.CA + 43)
			{
				if (o_.keyTake <= 1)
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
				}
				else
				{
					this.x = o_.x;
					this.y = o_.y;
					this.direction = o_.direction;
					this.flag1 = 1;
				}
			}
			else
			{
				this.Release();
			}
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Homura_M_ShotGun( t )
{
	this.ShotInit(t);
	this.SetMotion(551, 0);
	this.sx = 0.80000001 + this.rand() % 40 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 40 * 0.0099999998;
	this.rz = (30 - this.rand() % 61) * 0.017453292;
	local V_ = 25 + this.rand() % 26;
	this.vx = V_ * this.direction * this.cos(this.rz);
	this.vy = V_ * this.sin(this.rz);
	this.callbackMask = 2 | 32;
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		if (this.keyTake == 0)
		{
			this.count++;

			if (this.count >= 10)
			{
				this.SetMotion(551, 1);
			}
		}
		else
		{
			this.sx *= 0.80000001;
			this.sy = this.sx;

			if (this.sx <= 0.0099999998)
			{
				this.Release();
			}
		}

		return true;
	};
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.SetUpdateFunction(up_);
	this.hitEffect = this.Init_HitAssultRifle;
	this.hitEvent = function ()
	{
		this.PlaySE(1622);
		this.hitEvent = null;
		this.Release();
	};
}

function Homura_M_ShotGun_Flash( t )
{
	this.ShotInit(t);
	this.SetMotion(551, 4);
	this.sx = 0.80000001 + this.rand() % 30 * 0.0099999998;
	this.sy = 0.80000001 + this.rand() % 30 * 0.0099999998;

	if (this.rand() % 10 <= 4)
	{
		this.sy *= -1.0;
	}

	local up_ = function ()
	{
		this.count++;
		this.sx *= 0.89999998;
		this.sy *= 0.89999998;

		if (this.count >= 4)
		{
			this.Release();
		}

		return true;
	};
	this.SetUpdateFunction(up_);
}

function Drop_ShotGun( t )
{
	this.ShotInit(t);
	this.SetMotion(551, 2);
	this.vx = -0.0 * this.direction;
	this.vy = 0.0;
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.rz += -1.0 * 0.017453292;
		this.vy += 0.25;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Drop_Shell_M( t )
{
	this.ShotInit(t);
	this.SetMotion(551, 3);
	this.vx = -1.0 - this.rand() % 21 * 0.1;
	this.vy = -6.0 - this.rand() % 11 * 0.1;
	this.flag1 = -6.0 - this.rand() % 7;
	this.flag2 = function ()
	{
		this.hitEvent = null;
		this.vy *= -0.40000001;
		this.vx *= 0.69999999;
	};
	this.hitEvent = this.flag2;
	this.SetUpdateFunction(function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		this.count++;
		this.rz += this.flag1;
		this.vy += 0.5;

		if (this.vy > 0.0)
		{
			this.callbackMask = 8 | 4;
			this.hitEvent = this.flag2;
		}
		else
		{
			this.callbackMask = 8;
		}

		if (this.count >= 60)
		{
			this.Release();
		}

		return true;
	});
}

function Homura_M_HandGun( t )
{
	this.ShotInit(t);

	if (t.flag1 >= 5)
	{
		this.SetMotion(554, 1);
	}
	else
	{
		this.SetMotion(554, 0);
	}

	if (t.flag1 == 1 || t.flag1 == 2)
	{
		this.flag1 = 1;
	}

	if (t.flag1 == 3 || t.flag1 == 4)
	{
		this.flag1 = 2;
	}

	if (t.flag1 >= 5)
	{
		this.flag1 = 3;
	}

	local V_ = 40.0;
	this.vx = V_ * this.direction * this.cos(this.rz);
	this.vy = V_ * this.sin(this.rz);
	this.callbackMask = 2 | 32;
	local up_ = function ()
	{
		if (this.UpdateStopCheck())
		{
			return false;
		}

		if (this.hitTarget.len() > this.flag1)
		{
			this.Release();
		}

		this.count++;

		if (this.count >= 30)
		{
			this.Release();
		}

		return true;
	};
	this.SetCollisionRotation(0.0, 0.0, this.rz);
	this.SetUpdateFunction(up_);
	this.hitEffect = this.Init_HitAssultRifle;
	this.hitEvent = function ()
	{
		this.PlaySE(1614);

		if (this.hitTarget.len() > this.flag1)
		{
			this.Release();
		}
	};
}

function Homura_M_Granade_Upper( t )
{
	this.ShotInit(t);
	this.SetMotion(552, 0);
	this.collisionMask = 8 | 4;
	this.callbackGroup = 32;
	this.callbackMask = 0;
	this.baseDef = 0.0;
	this.flag1 = 0;
	this.count = 180;

	if (t.flag1 > 0)
	{
		this.vx = 8.0 * this.direction;
		this.vy = -14.0;
	}
	else
	{
		this.vx = 4.0 * this.direction;
		this.vy = -17.5;
	}

	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Homura_M_Granade_Expload, this.DefaultShotTable());
		this.Release();
	};
	this.hitAction = function ( type_, t_ )
	{
		switch(type_)
		{
		case 0:
		case 1:
			this.SetMotion(552, 0);

			if (this.Abs(t_.hitVecX) > this.Abs(t_.hitVecY))
			{
				this.vx = -(14.0 + this.rand() % 20 * 0.1) * t_.direction;
				this.vy = -(10.0 + this.rand() % 20 * 0.1);
			}
			else
			{
				this.vx = -(9.0 + this.rand() % 20 * 0.1) * t_.direction;
				this.vy = -(21.5 + this.rand() % 20 * 0.1);
			}

			this.flag1 = 2;
			this.callbackMask = 2;
			break;

		default:
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Homura_M_Granade_Expload, this.DefaultShotTable());
			this.Release();
			return;
			break;
		}
	};
	this.SetUpdateFunction(this.Homura_M_Granade);
}

function Homura_M_Granade_Under( t )
{
	this.ShotInit(t);
	this.SetMotion(552, 0);
	this.collisionMask = 8 | 4;
	this.callbackGroup = 32;
	this.callbackMask = 0;
	this.baseDef = 0.0;
	this.flag1 = 0;
	this.count = 180;
	this.vx = 4.0 * this.direction;

	if (t.flag1 > 0)
	{
		this.vx = 12.0 * this.direction;
	}

	this.vy = 2.5;
	this.SetUpdateFunction(this.Homura_M_Granade);
	this.hitEvent = function ()
	{
		this.hitEvent = null;
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Homura_M_Granade_Expload, this.DefaultShotTable());
		this.Release();
	};
	this.hitAction = function ( type_, t_ )
	{
		switch(type_)
		{
		case 0:
		case 1:
			this.SetMotion(552, 0);

			if (this.Abs(t_.hitVecX) > this.Abs(t_.hitVecY))
			{
				this.vx = -(14.0 + this.rand() % 20 * 0.1) * t_.direction;
				this.vy = -(10.0 + this.rand() % 20 * 0.1);
			}
			else
			{
				this.vx = -(9.0 + this.rand() % 20 * 0.1) * t_.direction;
				this.vy = -(21.5 + this.rand() % 20 * 0.1);
			}

			this.flag1 = 2;
			this.callbackMask = 2;
			this.flag1 = 2;
			this.callbackMask = 2;
			break;

		default:
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Homura_M_Granade_Expload, this.DefaultShotTable());
			this.Release();
			return;
			break;
		}
	};
}

function Homura_M_Granade()
{
	if (this.UpdateStopCheck())
	{
		return false;
	}

	if (this.keyTake == 0)
	{
		this.rz += 17.5 * 0.017453292;
	}

	this.vy += 0.75;
	this.count--;

	if (this.count <= 0)
	{
		this.world2d.CreateActor(this.x, this.y, this.direction, this.Homura_M_Granade_Expload, this.DefaultShotTable());
		this.Release();
		return;
	}

	if (this.count <= 30)
	{
		if (this.count % 6 >= 3)
		{
			this.blue = 0.0;
			this.green = 0.0;
		}
		else
		{
			this.blue = 1.0;
			this.green = 1.0;
		}
	}
	else if (this.count <= 60)
	{
		if (this.count % 10 >= 5)
		{
			this.blue = 0.0;
			this.green = 0.0;
		}
		else
		{
			this.blue = 1.0;
			this.green = 1.0;
		}
	}

	this.flag1--;

	if (this.hitTop || this.hitBottom || this.hitLeft || this.hitRight)
	{
		if (this.vx * this.vx + this.vy * this.vy <= 5.0 * 5.0)
		{
			if (this.keyTake == 0)
			{
				this.SetMotion(552, 1);
				this.rz = 0;
				this.callbackMask = 0;
			}

			this.vx = 0.0;
			this.vy = 0.0;
			return true;
		}
		else if (this.flag1 <= 0)
		{
			if (this.hitTop && this.vy < 0.0 || this.hitBottom && this.vy > 0.0)
			{
				this.vy *= -0.25;
				this.vx *= 0.5;
			}
			else if (this.hitRight && this.vx > 0.0 || this.hitLeft && this.vx < 0.0)
			{
				this.vx *= -0.5;
			}
		}
	}

	return true;
}

function Homura_M_Granade_Expload( t )
{
	this.ShotInit(t);
	this.PlaySE(2000);
	this.SetMotion(552, 3);
	this.playerResist = true;
	this.callbackGroup = 1;
	this.callbackMask = 2 | 1 | 32;
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(552, 5);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}

			this.sx += 0.0099999998;
			this.sy = this.sx;

			if (this.alpha > 0.025)
			{
				this.alpha -= 0.025;
			}
			else
			{
				this.Release();
			}

			return true;
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(552, 6);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	this.world2d.CreateActor(this.x, this.y, this.direction, function ( t )
	{
		this.ShotInit(t);
		this.SetMotion(552, 7);
		this.SetEndTakeCallbackFunction(this.EndtoRelease);
		this.SetUpdateFunction(function ()
		{
			if (this.UpdateStopCheck())
			{
				return false;
			}
			else
			{
				return true;
			}
		});
	}, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.30000001;
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Effect_Smoke, t);
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.89999998;
		this.sy = this.sx;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
			this.blue -= 0.050000001;
			this.green -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Homura_M_Charge( t )
{
	this.ShotInit(t);
	this.SetMotion(553, 1);
	this.priority = 300;

	if (this.owner in this.actor)
	{
		if (this.actor[this.owner].option[0])
		{
			if (this.actor[this.owner].option[0].func)
			{
				this.actor[this.owner].option[0].func();
			}
		}

		this.actor[this.owner].option[0] = this;
	}

	this.func = function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].option[0] == this)
			{
				this.actor[this.owner].option[0] = null;
			}
		}

		this.func = null;
		this.Release();
	};
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			local t_ = this.actor[this.owner];

			if (t_.motion == 524 || t_.motion == 525)
			{
				if (t_.keyTake >= 2)
				{
					if (this.func)
					{
						this.func();
					}
				}
				else
				{
					this.count++;
					this.x = t_.point0_x;
					this.y = t_.point0_y;

					if (t_.u.chargeLV == 3 || t_.u.chargeLV == 4)
					{
						this.sx = 2.0;
						this.sy = 2.0;

						if (this.count % 10 == 0)
						{
							local t = this.DefaultShotTable();
							t.scale = 0.5 + this.rand() % 6 * 0.1;
							this.world2d.CreateActor(this.x + this.rand() % 21 - 10, this.y + this.rand() % 21 - 10, this.direction, this.Homura_M_ChargeLight, t);
						}
					}

					if (t_.u.chargeLV == 5)
					{
						this.sx = 4.0;
						this.sy = 4.0;

						if (this.count % 6 == 0)
						{
							local t = this.DefaultShotTable();
							t.scale = 1.0 + this.rand() % 11 * 0.1;
							this.world2d.CreateActor(this.x + this.rand() % 41 - 20, this.y + this.rand() % 41 - 20, this.direction, this.Homura_M_ChargeLight, t);
						}
					}
				}
			}
			else if (this.func)
			{
				this.func();
			}
		}
		else if (this.func)
		{
			this.func();
		}

		return true;
	});
}

function Homura_M_ChargeLight( t )
{
	this.ShotInit(t);
	this.SetMotion(553, 3);
	this.priority = 300;
	this.vx = 2.0 - this.rand() % 41 * 0.1;
	this.vy = this.rand() % 21 * 0.1;
	this.SetUpdateFunction(function ()
	{
		this.vy += 0.2;
		this.count++;

		if (this.count >= 10)
		{
			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function QB_DeadEffect( t )
{
	this.ShotInit(t);
	this.SetMotion(650, this.rand() % 4);
	this.flag1 = this.rand() % 360 * 0.017453292;
	this.flag2 = 3.0 + this.rand() % 8;
	this.vx = this.flag2 * this.cos(this.flag1);
	this.vy = this.flag2 * this.sin(this.flag1);
	this.SetUpdateFunction(function ()
	{
		this.vx *= 0.98000002;
		this.vy *= 0.98000002;
		this.count++;

		if (this.count >= 30)
		{
			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
				this.blue -= 0.050000001;
				this.green -= 0.050000001;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

