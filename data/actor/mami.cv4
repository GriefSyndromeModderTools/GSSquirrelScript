function InputCancelMove()
{
	if (this.isAir)
	{
		if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
		{
			this.u.BeginAirJump.call(this);
			return;
		}
	}
	else if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
	{
		this.u.BeginJump.call(this);
		return;
	}
}

function InputAttack()
{
	if (this.input.b0 == 1)
	{
		this.u.inputCountA = 10;
	}

	if (this.input.b1 == 1)
	{
		this.u.inputCountB = 10;
	}

	if (this.input.b3 == 1)
	{
		this.u.inputCountC = 10;
	}

	this.u.inputCountA--;
	this.u.inputCountB--;
	this.u.inputCountC--;

	if (this.u.inputCountC > 0)
	{
		if (this.C_Check(40))
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.InputReset.call(this);
				this.u.BeginMagic.call(this);
			}
		}
	}
	else if (this.u.inputCountB > 0)
	{
		if (this.C_Check(31) && this.input.y > 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUnderAir.call(this);
			}
			else
			{
				this.u.BeginAttackUnder.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.y < 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUpperAir.call(this);
			}
			else
			{
				this.u.BeginAttackUpper.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.x != 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackFrontAir.call(this);
			}
			else
			{
				this.u.BeginAttackFront.call(this);
			}
		}
		else if (this.C_Check(30))
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackLongAir.call(this);
			}
			else
			{
				this.u.BeginAttackLong.call(this);
			}
		}
	}
	else if (this.u.inputCountA > 0)
	{
		if (this.C_Check(20))
		{
			if (this.motion == 20 + this.u.CA || this.motion == 21 + this.u.CA || this.motion == 22 + this.u.CA || this.motion == 23 + this.u.CA)
			{
				if (this.u.rushCount)
				{
					this.u.InputReset.call(this);

					if (this.isAir)
					{
						this.u.BeginAttackRushAir.call(this);
					}
					else
					{
						this.u.BeginAttackRush.call(this);
					}
				}
			}
			else
			{
				this.u.rushCount = 2;
				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginAttackAir.call(this);
				}
				else
				{
					this.u.BeginAttack.call(this);
				}
			}
		}
	}
}

function BeginWalk()
{
	if (this.input.x > 0.1)
	{
		this.direction = 1.0;
		this.vx = 4.0;
	}
	else
	{
		this.direction = -1.0;
		this.vx = -4.0;
	}

	if (this.motion != this.u.CA + 1)
	{
		this.ChangeFreeMove();
		this.fallLabel = this.u.BeginFall;
		this.SetMotion(this.u.CA + 1, 0);
	}
}

function BeginJump()
{
	if (!this.isAir)
	{
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
		}
	}
}

function BeginAirJump()
{
	if (this.input.y > 0 && this.C_Check(0))
	{
		this.u.BeginAttackFall.call(this);
		return;
	}

	if (this.u.jumpCount == 0)
	{
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.u.jumpCount++;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
			return;
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
			return;
		}
	}
}

function BeginAirSlide()
{
	if (this.input.x * this.input.x >= 0.0099999998)
	{
		this.vx += this.input.x >= 0.1 ? 0.2 : -0.2;

		if (this.Abs(this.vx) > 4.0)
		{
			this.vx = this.vx > 0.0 ? 4.0 : -4.0;
		}
	}
}

function SwingLow()
{
	this.HitReset();
	this.SetEndTakeCallbackFunction(null);
}

function SwingHigh()
{
	this.HitReset();
	this.SetEndTakeCallbackFunction(null);
}

function BeginAttackFall()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 9, 0);
	this.PlaySE(1002);
	this.hitEffect = this.HitEffect_Low;
	this.stateLabel = this.u.AttackFall;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x * this.input.x >= 0.0099999998)
	{
		this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
	}

	this.vy = 15.0;
	this.vx = 3.0 * this.direction;
	this.isAir = true;
	this.HitReset();
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFall()
{
	if (this.hitTarget.len())
	{
		this.u.HitAttackFall.call(this);
	}
}

function HitAttackFall()
{
	this.ChangeFreeMove();
	this.isAir = true;
	this.sitLabel = this.u.BeginSit;
	this.vy = -15.0;

	if (this.input.x != 0)
	{
		if (this.input.x > 0.0)
		{
			this.vx = 4.0;
		}
		else
		{
			this.vx = -4.0;
		}
	}
	else
	{
		this.vx = 0.0;
	}

	this.collisionMask = 8 | 16;
	this.u.jumpCount = 0;
	this.SetMotion(this.u.CA + 5, 0);
}

function BeginAttack()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 20, 0);
	this.vx *= 0.5;
	this.stateLabel = this.u.Attack;
	this.fallLabel = this.u.BeginFall;
	this.hitEffect = this.HitEffect_Low;
	this.count = 0;

	if (this.input.x * this.input.x >= 0.0099999998)
	{
		this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
	}

	this.HitReset();
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Attack_Fire,
		this.u.TrushGun
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Attack()
{
	this.count++;

	if (this.Abs(this.vx) <= 0.1)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
	}
}

function Attack_Fire()
{
	this.HitReset();
	this.PlaySE(1300);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_A, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.rz = 3.141592 * 0.5;
	t.scale = 1.0;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
}

function TrushGun()
{
	this.HitReset();
	this.PlaySE(1302);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_TrushGun, this.DefaultShotTable());
}

function TrushGun_Front()
{
	this.HitReset();
	this.PlaySE(1302);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, -this.direction, this.Init_Mami_TrushGun, this.DefaultShotTable());
}

function BeginAttackAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 21, 0);
	this.stateLabel = this.u.AttackAir;
	this.sitLabel = this.u.BeginSit;
	this.hitEffect = this.HitEffect_Low;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	if (this.Abs(this.vy) >= 1.5)
	{
		this.vy = this.vy > 0.0 ? 1.5 : -1.5;
	}

	this.HitReset();
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Attack_Fire,
		this.u.TrushGun
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackAir()
{
	this.setG = 0.0099999998;

	if (this.input.x == 0)
	{
		if (this.Abs(this.vx) <= 0.1)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
		}
	}
	else
	{
		this.vx += this.input.x > 0 ? 0.1 : -0.1;

		if (this.vx * this.direction >= 2.0)
		{
			this.vx = 2.0 * this.direction;
		}

		if (this.vx * this.direction <= -2.0)
		{
			this.vx = -2.0;
		}
	}
}

function BeginAttackRush()
{
	if (this.motion == this.u.CA + 22)
	{
		if (this.keyTake == 4)
		{
			this.LabelClear();
			this.u.rushCount--;
			this.u.TrushGun_Front.call(this);
			this.SetMotion(this.u.CA + 22, 1);
			this.u.AttackRush_GetGun.call(this);
			this.stateLabel = this.u.AttackRush;
			this.fallLabel = this.u.BeginFall;
			this.hitEffect = this.HitEffect_Low;

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			this.SetEndTakeCallbackFunction(this.KeyActionCheck);
			this.keyAction = [
				this.u.AttackRush_GetGun,
				this.u.AttackRush_Fire,
				this.u.AttackRush_ChangeGun,
				this.u.AttackRush_Fire,
				this.u.TrushGun_Front
			];
			this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		}
	}
	else if (this.keyTake == 2)
	{
		this.LabelClear();
		this.u.TrushGun.call(this);
		this.option[0] = this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_RushBack, this.DefaultShotTable());
		this.SetMotion(this.u.CA + 22, 0);
		this.stateLabel = this.u.AttackRush;
		this.fallLabel = this.u.BeginFall;
		this.hitEffect = this.HitEffect_Low;

		if (this.input.x)
		{
			this.direction = this.input.x > 0 ? 1.0 : -1.0;
		}

		this.SetEndTakeCallbackFunction(this.KeyActionCheck);
		this.keyAction = [
			this.u.AttackRush_GetGun,
			this.u.AttackRush_Fire,
			this.u.AttackRush_ChangeGun,
			this.u.AttackRush_Fire,
			this.u.TrushGun_Front
		];
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	}
}

function AttackRush()
{
	if (this.Abs(this.vx) <= 1.0)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 1.0 : -1.0;
	}
}

function AttackRush_Fire()
{
	this.HitReset();
	this.PlaySE(1300);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_A, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.rz = 3.141592 * 0.5;
	t.scale = 1.0;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
}

function AttackRush_GetGun()
{
	if (this.option[0])
	{
		this.option[0].func.call(this.option[0]);
	}
}

function AttackRush_ChangeGun()
{
	this.u.TrushGun.call(this);

	if (this.option[0])
	{
		this.option[0].func.call(this.option[0]);
	}
}

function BeginAttackRushAir()
{
	if (this.motion == this.u.CA + 23)
	{
		if (this.keyTake == 4)
		{
			this.LabelClear();
			this.u.rushCount--;
			this.u.TrushGun_Front.call(this);
			this.SetMotion(this.u.CA + 23, 1);
			this.u.AttackRush_GetGun.call(this);
			this.stateLabel = this.u.AttackRushAir;
			this.sitLabel = this.u.BeginSit;
			this.hitEffect = this.HitEffect_Low;

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			this.SetEndTakeCallbackFunction(this.KeyActionCheck);
			this.keyAction = [
				this.u.AttackRush_GetGun,
				this.u.AttackRush_Fire,
				this.u.AttackRush_ChangeGun,
				this.u.AttackRush_Fire,
				this.u.TrushGun_Front
			];
			this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		}
	}
	else if (this.keyTake == 2)
	{
		this.LabelClear();
		this.u.TrushGun.call(this);
		this.option[0] = this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_RushBack_Air, this.DefaultShotTable());
		this.SetMotion(this.u.CA + 23, 0);
		this.stateLabel = this.u.AttackRushAir;
		this.sitLabel = this.u.BeginSit;
		this.hitEffect = this.HitEffect_Low;

		if (this.input.x)
		{
			this.direction = this.input.x > 0 ? 1.0 : -1.0;
		}

		this.SetEndTakeCallbackFunction(this.KeyActionCheck);
		this.keyAction = [
			this.u.AttackRush_GetGun,
			this.u.AttackRush_Fire,
			this.u.AttackRush_ChangeGun,
			this.u.AttackRush_Fire,
			this.u.TrushGun_Front
		];
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	}
}

function AttackRushAir()
{
	this.setG = 0.0099999998;
}

function BeginAttackLong()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 24, 0);
	this.stateLabel = this.u.AttackLong;
	this.fallLabel = this.u.BeginFall;
	this.count = 0;
	this.flag1 = 0;
	this.vx = 0.0;
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function AttackLong()
{
	if (this.keyTake == 1)
	{
		this.count++;

		if (this.count % 5 == 0)
		{
			this.flag1++;

			if (this.flag1 <= 19)
			{
				this.PlaySE(1303);

				if (this.flag1 % 2 == 0)
				{
					local t = this.DefaultShotTable();
					t.priority = 150;
					t.flag1 = this.flag1;
					this.world2d.CreateActor(this.point0_x + this.flag1 * 4 * this.direction, this.point0_y - 50 + this.rand() % 100, this.direction, this.Init_Mami_ChargeGun, t);
				}
				else
				{
					local t = this.DefaultShotTable();
					t.priority = 300;
					t.flag1 = this.flag1;
					this.world2d.CreateActor(this.point0_x - this.flag1 * 4 * this.direction, this.point0_y - 50 + this.rand() % 100, this.direction, this.Init_Mami_ChargeGun, t);
				}
			}
		}

		if (this.input.b1 <= 0 && this.count >= 20)
		{
			this.u.AttackLongFire.call(this);
		}
	}
}

function BeginAttackLongAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 25, 0);
	this.stateLabel = this.u.AttackLongAir;
	this.sitLabel = this.u.BeginSit;
	this.count = 0;
	this.flag1 = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function AttackLongAir()
{
	if (this.keyTake <= 2)
	{
		this.setG = 0.0;
	}

	if (this.keyTake == 1)
	{
		this.count++;

		if (this.count % 5 == 0)
		{
			this.flag1++;

			if (this.flag1 <= 19)
			{
				this.PlaySE(1303);

				if (this.flag1 % 2 == 0)
				{
					local t = this.DefaultShotTable();
					t.priority = 150;
					t.flag1 = this.flag1;
					this.world2d.CreateActor(this.point0_x + this.flag1 * 4 * this.direction, this.point0_y - 50 + this.rand() % 100, this.direction, this.Init_Mami_ChargeGun, t);
				}
				else
				{
					local t = this.DefaultShotTable();
					t.priority = 300;
					t.flag1 = this.flag1;
					this.world2d.CreateActor(this.point0_x - this.flag1 * 4 * this.direction, this.point0_y - 50 + this.rand() % 100, this.direction, this.Init_Mami_ChargeGun, t);
				}
			}
		}

		if (this.input.b1 <= 0 && this.count >= 20)
		{
			this.u.AttackLongFire.call(this);
		}
	}
}

function AttackLongFire()
{
	this.HitReset();
	this.SetMotion(this.motion, 2);
}

function BeginAttackFront()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 30, 0);
	this.stateLabel = this.u.AttackFront;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = 0.0;
	this.HitReset();
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.AttackFront_Move,
		this.u.AttackFront_Fire,
		null,
		null
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFront()
{
	if (this.keyTake == 1)
	{
		this.vx *= 0.94999999;
	}

	if (this.keyTake >= 2)
	{
		if (this.Abs(this.vx) <= 1.0)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 1.0 : -1.0;
		}
	}
}

function AttackFront_Move()
{
	this.vx = 10.0 * this.direction;
	local t = this.DefaultShotTable();
	t.flag1 = 0;
	t.scale = 0.5;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
}

function AttackFront_Fire()
{
	this.vx *= 0.5;
	this.vy *= 0.1;
	this.PlaySE(1301);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_ShotA, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.rz = 3.141592 * 0.5;
	t.scale = 1.25;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
	this.world2d.CreateActor(this.point1_x + this.vx, this.point1_y + this.vy, -this.direction, this.Init_Mami_ShotA, this.DefaultShotTable());
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.rz = 3.141592 * 0.5;
	t.scale = 1.25;
	this.world2d.CreateActor(this.point1_x + this.vx, this.point1_y + this.vy, -this.direction, this.Effect_Smoke, t);
}

function BeginAttackFrontAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 31, 0);
	this.stateLabel = this.u.AttackFrontAir;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = 0.0;
	this.HitReset();
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.AttackFrontAir_Move,
		this.u.AttackFront_Fire,
		null
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.vx *= 0.1;
	this.vy *= 0.1;
}

function AttackFrontAir()
{
	if (this.keyTake == 0 || this.keyTake == 2)
	{
		this.setG = 0.0049999999;
	}

	if (this.keyTake == 1)
	{
		this.vx *= 0.94999999;
	}

	if (this.keyTake >= 2)
	{
		if (this.Abs(this.vx) <= 1.0)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
		}
	}
}

function AttackFrontAir_Move()
{
	this.vx = 8.5 * this.direction;
	this.vy = -4.5;
}

function BeginAttackUnder()
{
	this.LabelClear();
	this.HitReset();
	this.vx = 0.0;
	this.SetMotion(this.u.CA + 32, 0);
	this.isAir = true;
	this.vy = -10.0;
	local t = this.DefaultShotTable();
	t.flag1 = 0;
	t.scale = 0.5;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
	this.count = 0;
	this.flag1 = 0;

	if (this.input.x)
	{
		this.flag1 = 1;
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = (4.0 + 8.0 * this.flag1) * this.direction;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.PlaySE(1313);
		},
		function ()
		{
			this.PlaySE(1314);
			this.vx = -2.0 * this.direction;
			this.vy = -2.5;
			this.sitLabel = this.u.BeginSit;
			this.HitReset();
		}
	];
	this.stateLabel = function ()
	{
		if (this.keyTake <= 1)
		{
			if (this.Abs(this.vx) <= 1.0)
			{
			}
			else
			{
				this.vx -= this.vx > 0.0 ? 0.5 : -0.5;
			}

			this.setG = 0.75;

			if (this.vy > -1.5)
			{
				this.setG = 0.025;
			}
		}

		if (this.keyTake == 1)
		{
			this.count++;

			if (this.count % 8 == 0)
			{
				this.HitReset();
			}

			if (this.count >= 60 || this.count >= 10 && this.input.b1 <= 0)
			{
				this.PlaySE(1314);
				this.SetMotion(this.u.CA + 32, 2);
				this.vx = -2.0 * this.direction;
				this.vy = -2.5;
				this.sitLabel = this.u.BeginSit;
				this.HitReset();
			}
		}
	};

	if (this.option[1])
	{
		if (this.option[1].func)
		{
			this.option[1].func();
		}

		this.option[1] = null;
	}

	this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_Ribbon_2B, this.DefaultShotTable());
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function BeginAttackUnderAir()
{
	this.LabelClear();
	this.HitReset();
	this.vx = 0.0;
	this.SetMotion(this.u.CA + 33, 0);
	this.isAir = true;
	this.vy = -8.0;
	this.count = 0;
	this.flag1 = 0;

	if (this.input.x)
	{
		this.flag1 = 1;
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = (4.0 + 8.0 * this.flag1) * this.direction;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.PlaySE(1313);
		},
		function ()
		{
			this.PlaySE(1314);
			this.vx = -4.0 * this.direction;
			this.vy = -2.5;
			this.sitLabel = this.u.BeginSit;
			this.HitReset();
		}
	];
	this.stateLabel = function ()
	{
		if (this.keyTake <= 1)
		{
			if (this.Abs(this.vx) <= 1.0)
			{
			}
			else
			{
				this.vx -= this.vx > 0.0 ? 0.5 : -0.5;
			}

			this.setG = 0.75;

			if (this.vy > -1.5)
			{
				this.setG = 0.050000001;
			}
		}

		if (this.keyTake == 1)
		{
			this.count++;

			if (this.count % 8 == 0)
			{
				this.HitReset();
			}

			if (this.count >= 60 || this.count >= 10 && this.input.b1 <= 0)
			{
				this.PlaySE(1314);
				this.SetMotion(this.u.CA + 32, 2);
				this.vx = -4.0 * this.direction;
				this.vy = -2.5;
				this.sitLabel = this.u.BeginSit;
				this.HitReset();
			}
		}
	};

	if (this.option[1])
	{
		if (this.option[1].func)
		{
			this.option[1].func();
		}

		this.option[1] = null;
	}

	this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_Ribbon_2B, this.DefaultShotTable());
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function BeginAttackUpper()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 34, 0);
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
		this.vx = 8.0 * this.direction;
	}

	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.scale = 1.0;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackUpper_Fire);
	this.stateLabel = function ()
	{
		if (this.Abs(this.vx) <= 0.25)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.25 : -0.25;
		}
	};
}

function AttackUpper()
{
	if (this.Abs(this.vx) <= 0.25)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.25 : -0.25;
	}
}

function AttackUpper_Fire()
{
	if (!this.isAir)
	{
		this.vx *= 0.25;
	}

	this.SetEndTakeCallbackFunction(null);
	this.PlaySE(1315);
	local t = this.DefaultShotTable();
	t.rz = -60.0 * 0.017453292;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_Shot8B, t);
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_ShotC, t);
	this.world2d.CreateActor(this.point1_x + this.vx, this.point1_y + this.vy, -this.direction, this.Init_Mami_Shot8B, t);
	this.world2d.CreateActor(this.point1_x + this.vx, this.point1_y + this.vy, -this.direction, this.Init_Mami_ShotC, t);
}

function BeginAttackUpperAir()
{
	this.LabelClear();
	this.vx *= 0.80000001;
	this.SetMotion(this.u.CA + 35, 0);
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vy = -12.5;
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackUpper_Fire);
	this.stateLabel = function ()
	{
	};
}

function BeginMagic()
{
	this.LabelClear();
	this.PlaySE(1310);
	this.count = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetMotion(this.u.CA + 40, 0);
	this.stateLabel = this.u.Magic;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		function ()
		{
			this.PlaySE(1312);
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_Canon, this.DefaultShotTable());
			this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Mami_Hammer, this.DefaultShotTable());
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_CanonFlash, this.DefaultShotTable());
		},
		null,
		this.u.Magic_Fire
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x, this.y, this.direction, this.Mami_Ribbon, t);
}

function Magic()
{
	if (this.keyTake <= 4)
	{
		this.setG = 0.0;

		if (this.Abs(this.vx) > 0.25)
		{
			this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
		}
	}

	if (this.keyTake == 3)
	{
		this.count++;

		if (this.count >= 60)
		{
			if (this.count % 5 == 0)
			{
				if (this.input.b3 > 0)
				{
					if (!this.UseMagic(1))
					{
						this.SetMotion(this.u.CA + 40, 4);
					}
				}
				else
				{
					this.SetMotion(this.u.CA + 40, 4);
					this.sitLabel = this.u.BeginSit;
				}
			}
		}
	}
}

function Magic_Fire()
{
	this.PlaySE(1311);
	this.vx = -5.0 * this.direction;
	this.vy = -0.5;
	this.isAir = true;
	this.fallLabel = null;
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Init_Mami_Magic, t);
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.rz = 3.141592 * 0.5;
	t.scale = 2.5;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Effect_Smoke, t);
}

