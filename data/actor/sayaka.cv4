function InputCancelMove()
{
	if (this.isAir)
	{
		if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
		{
			this.u.BeginAirJump.call(this);
			return;
		}
	}
	else if (this.flagState & 2097152 && this.input.b2 > 0 && this.input.b2 < 10)
	{
		this.u.BeginJump.call(this);
		return;
	}
}

function InputAttack()
{
	if (this.input.b0 == 1)
	{
		this.u.inputCountA = 10;
	}

	if (this.input.b1 == 1)
	{
		this.u.inputCountB = 10;
	}

	if (this.input.b3 == 1)
	{
		this.u.inputCountC = 10;
	}

	this.u.inputCountA--;
	this.u.inputCountB--;
	this.u.inputCountC--;

	if (this.u.inputCountC > 0)
	{
		if (this.C_Check(40))
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginMagic_Air.call(this);
				}
				else
				{
					this.u.BeginMagic.call(this);
				}
			}
		}
	}
	else if (this.u.inputCountB > 0)
	{
		if (this.C_Check(31) && this.input.y > 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUnderAir.call(this);
			}
			else
			{
				this.u.BeginAttackUnder.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.y < 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackUpperAir.call(this);
			}
			else
			{
				this.u.BeginAttackUpper.call(this);
			}
		}
		else if (this.C_Check(31) && this.input.x != 0)
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackFrontAir.call(this);
			}
			else
			{
				this.u.BeginAttackFront.call(this);
			}
		}
		else if (this.C_Check(30))
		{
			if (this.cancelLV < 30)
			{
				this.u.freeCancel = true;
			}
			else
			{
				this.u.freeCancel = false;
			}

			this.u.InputReset.call(this);

			if (this.isAir)
			{
				this.u.BeginAttackLongAir.call(this);
			}
			else
			{
				this.u.BeginAttackLong.call(this);
			}
		}
	}
	else if (this.u.inputCountA > 0)
	{
		if (this.C_Check(20))
		{
			if (this.motion == 20 + this.u.CA || this.motion == 21 + this.u.CA || this.motion == 22 + this.u.CA || this.motion == 23 + this.u.CA)
			{
				if (this.u.rushCount)
				{
					this.u.rushCount--;
					this.u.InputReset.call(this);

					if (this.isAir)
					{
						this.u.BeginAttackRushAir.call(this);
					}
					else
					{
						this.u.BeginAttackRush.call(this);
					}
				}
			}
			else
			{
				this.u.rushCount = 2;

				if (this.u.dexLV >= 2)
				{
					this.u.rushCount = 6;
				}

				this.u.InputReset.call(this);

				if (this.isAir)
				{
					this.u.BeginAttackAir.call(this);
				}
				else
				{
					this.u.BeginAttack.call(this);
				}
			}
		}
	}
}

function BeginWalk()
{
	if (this.input.x > 0.1)
	{
		this.direction = 1.0;
		this.vx = 4.0;
	}
	else
	{
		this.direction = -1.0;
		this.vx = -4.0;
	}

	if (this.motion != this.u.CA + 1)
	{
		this.u.SetBariaState.call(this, false);
		this.ChangeFreeMove();
		this.fallLabel = this.u.BeginFall;
		this.SetMotion(this.u.CA + 1, 0);
	}
}

function BeginJump()
{
	if (!this.isAir)
	{
		this.u.SetBariaState.call(this, false);
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
		}
	}
}

function BeginAirJump()
{
	if (this.input.y > 0 && this.C_Check(0))
	{
		this.u.SetBariaState.call(this, false);
		this.u.BeginAttackFall.call(this);
		return;
	}

	if (this.u.jumpCount == 0)
	{
		this.u.SetBariaState.call(this, false);
		this.ChangeFreeMove();
		this.sitLabel = this.u.BeginSit;
		this.u.jumpCount++;
		this.isAir = true;
		this.collisionMask = 8 | 16;
		this.vy = -15.0;
		this.PlaySE(1000);

		if (this.input.x * this.input.x >= 0.0099999998)
		{
			this.vx = this.input.x >= 0.1 ? 4.0 : -4.0;
			this.direction = this.input.x >= 0.1 ? 1.0 : -1.0;
			this.SetMotion(this.u.CA + 4, 0);
			return;
		}
		else
		{
			this.vx = 0.0;
			this.SetMotion(this.u.CA + 3, 0);
			return;
		}
	}
}

function BeginAirSlide()
{
	if (this.input.x * this.input.x >= 0.0099999998)
	{
		this.vx += this.input.x >= 0.1 ? 0.2 : -0.2;

		if (this.Abs(this.vx) > 4.0)
		{
			this.vx = this.vx > 0.0 ? 4.0 : -4.0;
		}
	}
}

function SwingLow()
{
	this.HitReset();
	this.PlaySE(1200);
	this.SetEndTakeCallbackFunction(null);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_NA, t);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 0.5;
	}
}

function SwingHigh()
{
	this.HitReset();
	this.PlaySE(1201);
	this.SetEndTakeCallbackFunction(null);
}

function BeginAttackFall()
{
	this.LabelClear();
	this.PlaySE(1002);
	this.SetMotion(this.u.CA + 9, 0);
	this.vx = 0.0;
	this.vy = 15.0;
	this.hitEffect = this.HitEffect_Low;
	this.stateLabel = this.u.AttackFall;
	this.sitLabel = this.u.BeginSit;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.isAir = true;
	this.HitReset();
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFall()
{
	if (this.hitTarget.len())
	{
		this.u.HitAttackFall.call(this);
	}
}

function HitAttackFall()
{
	this.ChangeFreeMove();
	this.sitLabel = this.u.BeginSit;
	this.collisionMask = 8 | 16;
	this.isAir = true;
	this.vy = -15.0;

	if (this.input.x != 0)
	{
		if (this.input.x > 0.0)
		{
			this.vx = 4.0;
		}
		else
		{
			this.vx = -4.0;
		}
	}
	else
	{
		this.vx = 0.0;
	}

	this.u.jumpCount = 0;
	this.SetMotion(this.u.CA + 5, 0);
}

function BeginAttack()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 20, 0);
	this.vx *= 0.5;
	this.stateLabel = this.u.Attack;
	this.fallLabel = this.u.BeginFall;
	this.hitEffect = this.HitEffect_SayakaLow_V;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.HitReset();
	this.SetEndTakeCallbackFunction(this.u.SwingLow);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Attack()
{
	this.count++;

	if (this.Abs(this.vx) <= 0.1)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
	}
}

function BeginAttackAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 21, 0);
	this.stateLabel = this.u.AttackAir;
	this.sitLabel = this.u.BeginSit;
	this.hitEffect = this.HitEffect_SayakaLow_V;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	if (this.Abs(this.vy) >= 3.0)
	{
		this.vy = this.vy > 0.0 ? 3.0 : -3.0;
	}

	this.HitReset();
	this.SetEndTakeCallbackFunction(this.u.SwingLow);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackAir()
{
	this.setG = 0.1;

	if (this.input.x == 0)
	{
		if (this.Abs(this.vx) <= 0.1)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
		}
	}
	else
	{
		this.vx += this.input.x > 0 ? 0.2 : -0.2;

		if (this.vx * this.direction >= 4.0)
		{
			this.vx = 4.0 * this.direction;
		}

		if (this.vx * this.direction <= 0.0)
		{
			this.vx = 0.0;
		}
	}
}

function BeginAttackRush()
{
	if (this.motion == this.u.CA + 22)
	{
		if (this.u.rushCount == 1 && this.u.dexLV >= 2)
		{
			this.LabelClear();
			this.SetMotion(this.u.CA + 22, 4);

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			this.vx *= 0.5;
			this.stateLabel = this.u.AttackRush;
			this.fallLabel = this.u.BeginFall;
			this.hitEffect = this.HitEffect_SayakaHigh_H;
			this.SetEndTakeCallbackFunction(this.u.AttackRush_Move);
			this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		}
		else if (this.keyTake == 1)
		{
			this.LabelClear();
			this.SetMotion(this.u.CA + 22, 2);

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			if (this.input.x * this.direction > 0)
			{
				this.vx += 5.0 * this.direction;
			}

			this.stateLabel = this.u.AttackRush;
			this.fallLabel = this.u.BeginFall;
			this.hitEffect = this.HitEffect_SayakaLow_V;
			this.SetEndTakeCallbackFunction(this.u.AttackRush_Swing);
			this.SetEndMotionCallbackFunction(null);
		}
		else if (this.keyTake == 3)
		{
			this.LabelClear();
			this.SetMotion(this.u.CA + 22, 0);

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			if (this.input.x * this.direction > 0)
			{
				this.vx += 5.0 * this.direction;
			}

			this.fallLabel = this.u.BeginFall;
			this.hitEffect = this.HitEffect_SayakaLow_H;
			this.stateLabel = this.u.AttackRush;
			this.SetEndTakeCallbackFunction(this.u.AttackRush_SwingB);
			this.SetEndMotionCallbackFunction(null);
		}
	}
	else
	{
		this.LabelClear();
		this.SetMotion(this.u.CA + 22, 2);

		if (this.input.x)
		{
			this.direction = this.input.x > 0 ? 1.0 : -1.0;
		}

		if (this.input.x * this.direction > 0)
		{
			this.vx += 5.0 * this.direction;
		}

		this.stateLabel = this.u.AttackRush;
		this.fallLabel = this.u.BeginFall;
		this.SetEndTakeCallbackFunction(this.u.AttackRush_Swing);
		this.SetEndMotionCallbackFunction(null);
	}
}

function AttackRush()
{
	if (this.Abs(this.vx) <= 1.0)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 1.0 : -1.0;
	}

	if (this.keyTake == 6)
	{
		if (this.Abs(this.vx) <= 0.40000001)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.40000001 : -0.40000001;
		}
	}
}

function BeginAttackRushAir()
{
	if (this.motion == this.u.CA + 23)
	{
		if (this.keyTake == 3)
		{
			this.LabelClear();
			this.sitLabel = this.u.BeginSit;
			this.SetMotion(this.u.CA + 23, 0);

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			this.stateLabel = this.u.AttackRushAir;
			this.hitEffect = this.HitEffect_SayakaLow_V;
			this.SetEndTakeCallbackFunction(this.u.AttackRushAir_SwingB);
			this.SetEndMotionCallbackFunction(null);
		}

		if (this.u.rushCount >= 2 && this.keyTake == 1)
		{
			this.LabelClear();
			this.sitLabel = this.u.BeginSit;
			this.SetMotion(this.u.CA + 23, 2);

			if (this.input.x)
			{
				this.direction = this.input.x > 0 ? 1.0 : -1.0;
			}

			this.stateLabel = this.u.AttackRushAir;
			this.hitEffect = this.HitEffect_SayakaLow_H;
			this.SetEndTakeCallbackFunction(this.u.AttackRushAir_Swing);
			this.SetEndMotionCallbackFunction(null);
		}
	}
	else
	{
		this.LabelClear();
		this.sitLabel = this.u.BeginSit;
		this.SetMotion(this.u.CA + 23, 2);

		if (this.input.x)
		{
			this.direction = this.input.x > 0 ? 1.0 : -1.0;
		}

		this.stateLabel = this.u.AttackRushAir;
		this.SetEndTakeCallbackFunction(this.u.AttackRushAir_Swing);
		this.SetEndMotionCallbackFunction(null);
	}
}

function AttackRushAir()
{
	this.setG = 0.1;

	if (this.input.x == 0)
	{
		if (this.Abs(this.vx) <= 0.1)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.1 : -0.1;
		}
	}
	else
	{
		this.vx += this.input.x > 0 ? 0.2 : -0.2;

		if (this.vx * this.direction >= 4.0)
		{
			this.vx = 4.0 * this.direction;
		}

		if (this.vx * this.direction <= 0.0)
		{
			this.vx = 0.0;
		}
	}
}

function AttackRush_Swing()
{
	this.HitReset();
	this.PlaySE(1200);
	this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
	local t = this.DefaultShotTable();
	t.flag1 = 1;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_Rush, t);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.scale = 0.5;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
	}
}

function AttackRush_SwingB()
{
	this.HitReset();
	this.PlaySE(1201);
	this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
	local t = this.DefaultShotTable();
	t.flag1 = 2;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_Rush, t);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.scale = 0.5;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
	}
}

function AttackRushAir_Swing()
{
	this.HitReset();
	this.PlaySE(1200);
	this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
	local t = this.DefaultShotTable();
	t.flag1 = 1;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_Rush, t);
}

function AttackRushAir_SwingB()
{
	this.HitReset();
	this.PlaySE(1201);
	this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
	local t = this.DefaultShotTable();
	t.flag1 = 2;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_Rush, t);
}

function AttackRush_Move()
{
	this.SetEndTakeCallbackFunction(this.u.AttackRush_Swing2);
	this.vx = 10.0 * this.direction;
}

function AttackRush_Swing2()
{
	this.HitReset();
	this.PlaySE(1201);
	local t = this.DefaultShotTable();
	t.flag1 = 3;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_Rush, t);
	this.SetEndTakeCallbackFunction(null);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.flag2 = 0.1;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 1.0;
	}
}

function BeginAttackLong()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 24, 0);
	this.stateLabel = this.u.AttackLong;
	this.hitEffect = this.HitEffect_SayakaHigh_H;
	this.count = 0;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function AttackLong()
{
	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 20, 6);

		switch(c_)
		{
		case 1:
			this.PlaySE(1202);
			break;

		case 3:
			this.PlaySE(1203);
			local t = this.DefaultShotTable();
			t.flag1 = 0;
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Sayaka_ChargeEffect, t);
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
			t.scale = 1.0;
			break;

		case 6:
			this.PlaySE(1204);
			local t = this.DefaultShotTable();
			t.flag1 = 2;
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Sayaka_ChargeEffect, t);
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.1;
			this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
			t.scale = 1.75;
			break;
		}

		if (this.input.b1 <= 0)
		{
			this.u.AttackLongDash.call(this);
			return;
		}
	}

	if (this.keyTake == 2 || this.keyTake == 4)
	{
		this.count--;

		if (this.keyTake == 4)
		{
			if (this.count % 4 == 0)
			{
				local t = this.DefaultShotTable();
				t.flag1 = 4;
				t.flag2 = 0.1;
				t.rz = -0.5 * 3.141592;
				this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
			}
		}

		if (this.count <= 0)
		{
			this.SetMotion(this.motion, 3);
			this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
			this.vx *= 0.5;
		}
	}

	if (this.keyTake == 3)
	{
		this.fallLabel = this.u.BeginFall;

		if (this.Abs(this.vx) <= 0.2)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.2 : -0.2;
		}
	}
}

function BeginAttackLongAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 25, 0);
	this.stateLabel = this.u.AttackLongAir;
	this.hitEffect = this.HitEffect_SayakaHigh_H;
	this.isAir = true;
	this.count = 0;
	this.u.chargeCount = 0;
	this.u.chargeLV = 0;
	this.vx *= 0.1;
	this.vy *= 0.1;
	this.setG = 0.0;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function AttackLongAir()
{
	if (this.keyTake < 2)
	{
		this.setG = 0.0049999999;
	}

	if (this.keyTake == 1)
	{
		local c_ = this.u.ChargeGainLoop.call(this, 20, 6);

		switch(c_)
		{
		case 1:
			this.PlaySE(1202);
			break;

		case 3:
			this.PlaySE(1203);
			local t = this.DefaultShotTable();
			t.flag1 = 0;
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Sayaka_ChargeEffect, t);
			break;

		case 6:
			this.PlaySE(1204);
			local t = this.DefaultShotTable();
			t.flag1 = 2;
			this.world2d.CreateActor(this.x, this.y, this.direction, this.Sayaka_ChargeEffect, t);
			break;
		}

		if (this.input.b1 <= 0)
		{
			this.u.AttackLongDash.call(this);
			return;
		}
	}

	if (this.keyTake == 2 || this.keyTake == 4)
	{
		this.setG = 0.0;
		this.count--;

		if (this.keyTake == 4)
		{
			if (this.count % 4 == 0)
			{
				local t = this.DefaultShotTable();
				t.flag1 = 4;
				t.flag2 = 0.1;
				t.rz = -0.5 * 3.141592;
				this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
			}
		}

		if (this.count <= 0)
		{
			this.SetMotion(this.motion, 3);
			this.SetEndTakeCallbackFunction(this.u.EndtoFreeMove);
			this.vx *= 0.5;
		}
	}

	if (this.keyTake == 3)
	{
		this.sitLabel = this.u.BeginSit;

		if (this.Abs(this.vx) <= 0.30000001)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.30000001 : -0.30000001;
		}
	}
}

function AttackLongDash()
{
	this.HitReset();
	this.vx = 10.0;

	if (this.u.chargeLV >= 3)
	{
		this.vx = 12.5;
	}

	if (this.u.chargeLV >= 6)
	{
		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 0;
			t.flag2 = 0.1;
			this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
			t.scale = 1.5;
		}

		this.vx = 17.5;
		this.PlaySE(1206);
		local t = this.DefaultShotTable();
		t.flag1 = 2;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Stab, t);
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.flag2 = 0.30000001;
		t.rz = -0.5 * 3.141592;
		this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.scale = 3.0;
		this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Sayaka_Stab, t);
		this.SetMotion(this.motion, 4);
	}
	else
	{
		if (!this.isAir)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 0;
			t.flag2 = 0.1;
			this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
			t.scale = 0.75;
		}

		this.PlaySE(1205);
		local t = this.DefaultShotTable();
		t.flag1 = 0;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Stab, t);
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		t.rz = -0.5 * 3.141592;
		this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Sayaka_Stab, t);
		this.SetMotion(this.motion, 2);
	}

	this.vx *= this.direction;
	this.count *= 0.25;

	if (this.count <= 10)
	{
		this.count = 10;
	}
}

function BeginAttackFront()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 30, 0);
	this.stateLabel = this.u.AttackFront;
	this.hitEffect = this.HitEffect_SayakaHigh_H;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = 0.0;
	this.setG = 0.0;
	this.HitReset();
	this.SetEndTakeCallbackFunction(this.u.AttackFront_Dash);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackFront()
{
	if (this.keyTake <= 2)
	{
	}
	else
	{
		this.fallLabel = this.u.BeginFall;
	}

	if (this.keyTake == 2)
	{
		if (this.Abs(this.vx) <= 1.0)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 1.0 : -1.0;
		}
	}
}

function BeginAttackFrontAir()
{
	this.LabelClear();
	this.SetMotion(this.u.CA + 31, 0);
	this.isAir = true;
	this.stateLabel = this.u.AttackFrontAir;
	this.hitEffect = this.HitEffect_SayakaHigh_H;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.HitReset();
	this.SetEndTakeCallbackFunction(this.u.AttackFront_Dash);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.vx *= 0.1;
	this.vy *= 0.1;
}

function AttackFrontAir()
{
	if (this.keyTake <= 2)
	{
		this.setG = 0.0024999999;
	}
	else
	{
		this.sitLabel = this.u.BeginSit;
	}

	if (this.keyTake == 2)
	{
		if (this.Abs(this.vx) <= 1.0)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.5 : -0.5;
		}
	}
}

function AttackFront_Dash()
{
	this.PlaySE(1211);
	this.vx = 8.0 * this.direction;
	this.SetEndTakeCallbackFunction(this.u.AttackFront_Swing);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 0;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 1.0;
	}
}

function AttackFront_Swing()
{
	this.PlaySE(1201);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Blade_6B, t);
	this.SetEndTakeCallbackFunction(null);

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 4;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 1.5;
	}
}

function BeginAttackUnder()
{
	this.LabelClear();
	local t = this.DefaultShotTable();
	t.flag1 = 1;
	t.flag2 = 0.1;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, -this.direction, this.Effect_Smoke, t);
	t.scale = 1.5;
	this.isAir = true;
	this.SetMotion(this.u.CA + 33, 0);
	this.PlaySE(1000);
	this.hitEffect = this.HitEffect_SayakaHigh_V;
	this.stateLabel = this.u.AttackUnderAir;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = -4.0 * this.direction;
	this.vy = -15.0;
	this.SetEndTakeCallbackFunction(this.u.AttackUnderAir_Stop);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function BeginAttackUnderAir()
{
	this.LabelClear();
	this.isAir = true;
	this.SetMotion(this.u.CA + 33, 0);
	this.PlaySE(1000);
	this.hitEffect = this.HitEffect_SayakaHigh_V;
	this.stateLabel = this.u.AttackUnderAir;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.vx = -4.0 * this.direction;
	this.vy = -10.0;
	this.SetEndTakeCallbackFunction(this.u.AttackUnderAir_Stop);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function AttackUnderAir()
{
	if (this.keyTake == 1 || this.keyTake == 2)
	{
		if (this.keyTake == 1)
		{
			this.vx = 0.0;
			this.vy = 0.0;
		}

		this.setG = 0.0;
	}

	if (this.keyTake == 2)
	{
		if (this.hitTarget.len())
		{
			this.u.AttackUnderAir_Hit.call(this);
			return;
		}
	}
}

function AttackUnderAir_Stop()
{
	this.PlaySE(1001);
	this.SetEndTakeCallbackFunction(this.u.AttackUnderAir_Move);
	this.vx = 0.0;
	this.vy = 0.0;
	local t = this.DefaultShotTable();
	t.flag1 = 3;
	this.world2d.CreateActor(this.point1_x, this.point1_y, this.direction, this.Sayaka_Stab_Under, t);
}

function AttackUnderAir_Move()
{
	this.sitLabel = this.u.AttackUnderAir_Hit;
	this.vx = 15.0 * this.direction;
	this.vy = 11.25;
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Stab_Under, t);
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.1;
	t.rz = (34 - 90) * 0.017453292;
	this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
	local t = this.DefaultShotTable();
	t.flag1 = 2;
	t.rz = 34 * 0.017453292;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Sayaka_Stab_Under, t);
	this.PlaySE(1207);
	this.HitReset();
}

function AttackUnderAir_Hit()
{
	this.sitLabel = this.u.BeginSit;
	this.vx = this.direction * -5.0;
	this.vy = -6.0;
	this.SetMotion(this.u.CA + 33, 3);
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(null);
}

function BeginAttackUpper()
{
	this.LabelClear();
	this.vx = 0.0;
	this.SetMotion(this.u.CA + 34, 0);
	this.stateLabel = this.u.AttackUpper;
	this.hitEffect = this.HitEffect_SayakaHigh_V;
	this.fallLabel = this.u.BeginFall;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackUpperJump);
}

function AttackUpper()
{
	if (this.keyTake == 1)
	{
		this.setG = 0.0;
	}
}

function AttackUpperJump()
{
	this.HitReset();
	this.PlaySE(1208);
	this.vx = 7.0 * this.direction;
	this.vy = -12.0;
	this.fallLabel = null;

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 1;
		t.flag2 = 0.1;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 1.5;
	}

	this.isAir = true;
	this.SetEndTakeCallbackFunction(this.u.AttackUpperFall);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Stab_Upper, t);
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.1;
	t.rz = (-52 - 90) * 0.017453292;
	this.world2d.CreateActor(this.x + this.vx, this.y - 30 + this.vy, this.direction, this.Effect_Smoke, t);
	local t = this.DefaultShotTable();
	t.flag1 = 2;
	t.rz = -52 * 0.017453292;
	this.world2d.CreateActor(this.point0_x + this.vx, this.point0_y + this.vy, this.direction, this.Sayaka_Stab_Upper, t);
}

function AttackUpperFall()
{
	this.sitLabel = this.u.BeginSit;
	this.vx *= 0.5;
	this.vy *= 0.5;
	this.SetEndTakeCallbackFunction(null);
}

function BeginAttackUpperAir()
{
	this.LabelClear();
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetMotion(this.u.CA + 35, 0);
	this.stateLabel = this.u.AttackUpperAir;
	this.hitEffect = this.HitEffect_SayakaHigh_V;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
	this.SetEndTakeCallbackFunction(this.u.AttackUpperJump);
}

function AttackUpperAir()
{
	if (this.keyTake <= 1)
	{
		this.setG = 0.0;
	}
}

function SetBariaState( sw_ )
{
	if (sw_)
	{
		this.endure = 0;
		this.endureMax = 1000;
		this.baseDef = 0.25;
	}
	else
	{
		this.endureMax = 0;
		this.baseDef = 1.0;
	}
}

function BeginMagic()
{
	this.LabelClear();
	this.count = 0;
	this.vx *= 0.25;
	this.u.SetBariaState.call(this, true);
	this.SetMotion(this.u.CA + 40, 0);
	this.stateLabel = this.u.Magic;
	this.hitEffect = this.HitEffect_SayakaHigh_H;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Magic_Move
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Magic()
{
	if (this.keyTake == 1)
	{
		this.count++;
		this.setG = 0.0;

		if (this.count >= 10)
		{
			this.SetMotion(this.u.CA + 40, 2);
			this.isAir = false;
		}

		if (this.u.inputCountB > 0)
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.BeginMagicAttack.call(this);
				return;
			}
		}
	}
	else if (this.Abs(this.vx) <= 0.75)
	{
		this.vx = 0.0;
	}
	else
	{
		this.vx -= this.vx > 0.0 ? 0.75 : -0.75;
	}
}

function Magic_Move()
{
	this.PlaySE(1209);
	this.fallLabel = null;

	if (!this.isAir)
	{
		local t = this.DefaultShotTable();
		t.flag1 = 0;
		t.flag2 = 0.1;
		this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Effect_Smoke, t);
		t.scale = 1.5;
	}

	this.isAir = true;
	this.setG = 0.0;
	this.vy = 0.0;
	this.vx = 15.0 * this.direction;
	this.count = 0;
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Magic, t);
}

function BeginMagic_Air()
{
	this.LabelClear();
	this.count = 0;
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.SetMotion(this.u.CA + 41, 0);
	this.u.SetBariaState.call(this, true);
	this.stateLabel = this.u.Magic_Air;
	this.hitEffect = this.HitEffect_SayakaHigh_H;

	if (this.input.x)
	{
		this.direction = this.input.x > 0 ? 1.0 : -1.0;
	}

	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.Magic_Move
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function Magic_Air()
{
	if (this.keyTake == 1)
	{
		this.count++;
		this.setG = 0.0;

		if (this.count >= 10)
		{
			this.SetMotion(this.u.CA + 41, 2);
			this.sitLabel = this.u.BeginSit;
			this.vx *= 0.5;
		}

		if (this.u.inputCountB > 0)
		{
			if (this.UseMagic(this.u.magicUse))
			{
				this.u.BeginMagicAttack.call(this);
				return;
			}
		}
	}
	else if (this.keyTake == 0)
	{
		this.setG = 0.0;
	}
}

function BeginMagicAttack()
{
	this.LabelClear();
	this.HitReset();
	this.isAir = true;
	this.SetMotion(this.u.CA + 43, 0);
	this.vy = 0.0;
	this.setG = 0.0;
	this.stateLabel = this.u.MagicAttack;
	this.hitEffect = this.HitEffect_SayakaHigh_H;
	this.SetEndTakeCallbackFunction(this.KeyActionCheck);
	this.keyAction = [
		this.u.MagicAttack_Move
	];
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function MagicAttack()
{
	if (this.keyTake == 0)
	{
		this.setG = 0.0;

		if (this.Abs(this.vx) <= 1.25)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 1.25 : -1.25;
		}
	}

	if (this.keyTake == 1)
	{
		this.count++;
		this.setG = 0.0;

		if (this.count % 4 == 0)
		{
			local t = this.DefaultShotTable();
			t.flag1 = 4;
			t.flag2 = 0.1;
			t.rz = -3.141592 * 0.5;
			this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
		}

		if (this.count >= 20)
		{
			this.vx *= 0.5;
			this.SetMotion(this.u.CA + 42, 2);
		}
	}

	if (this.keyTake == 2)
	{
		this.setG = 0.0;

		if (this.Abs(this.vx) <= 0.5)
		{
			this.vx = 0.0;
		}
		else
		{
			this.vx -= this.vx > 0.0 ? 0.5 : -0.5;
		}
	}
}

function MagicAttack_Move()
{
	this.PlaySE(1210);
	this.isAir = true;
	this.setG = 0.0;
	this.vy = 0.0;
	this.vx = 15.0 * this.direction;
	this.count = 0;
	local t = this.DefaultShotTable();
	t.flag1 = 2;
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Magic_Stab, t);
	local t = this.DefaultShotTable();
	t.flag1 = 4;
	t.flag2 = 0.40000001;
	t.rz = -3.141592 * 0.5;
	this.world2d.CreateActor(this.x + this.vx, this.y - 50 + this.vy, this.direction, this.Effect_Smoke, t);
	local t = this.DefaultShotTable();
	this.world2d.CreateActor(this.x + this.vx, this.y + this.vy, this.direction, this.Sayaka_Magic_StabBaria, t);
}

