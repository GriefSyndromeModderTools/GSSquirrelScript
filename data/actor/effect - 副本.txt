function Player_Shadow( t )
{
	this.ShotInit(t);
	this.priority = 500;
	this.updateGroup = 1;
	this.SetMotion(9010, 0);
	this.filter = 2;
	this.SetUpdateFunction(function ()
	{
		if (this.owner in this.actor)
		{
			if (this.actor[this.owner].isActive && this.actor[this.owner].isVisible)
			{
				this.isVisible = true;
			}
			else
			{
				this.isVisible = false;
				return;
			}

			this.x = this.actor[this.owner].x;
			local Pos_ = this.Vector3();
			local tPos_ = this.Vector3();
			local getPoint_ = this.Vector3();
			local Range_ = 600.0;
			local py = this.actor[this.owner].y;
			Pos_.x = this.x;
			Pos_.y = py - 20.0;
			Pos_.z = 0.0;
			tPos_.x = this.x;
			tPos_.y = py + Range_;
			tPos_.z = 0.0;

			if (this.world2d.RayTest(getPoint_, Pos_, tPos_, 8 | 4))
			{
				this.isVisible = true;
				this.y = getPoint_.y;

				if (this.y - py <= -4.0)
				{
					this.isVisible = false;
				}
				else if (this.y < py)
				{
					this.y = py;
				}

				this.sx = 1.0 - 1.0 * ((this.y - py) / Range_);
				this.sy = this.sx;
			}
			else
			{
				this.isVisible = false;
			}
		}

		return true;
	});
}

function Player_DeadTrail( t )
{
	this.SetMotion(t.flag1 + 17, 1);
	this.sx = 0.5 + this.rand() % 11 * 0.1;
	this.sy = this.sx;
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.98000002;
		this.sy = this.sx;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
	this.priority = 300;
}

function Player_DeadTrailB( t )
{
	this.SetMotion(t.flag1 + 17, 3);
	this.sx = 0.5 + this.rand() % 11 * 0.1;
	this.sy = this.sx;
	this.SetUpdateFunction(function ()
	{
		this.sx *= 0.98000002;
		this.sy = this.sx;
		this.vy += 0.25;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
	this.priority = 300;
}

function Player_Revive( t )
{
	this.SetMotion(t.flag1 + 17, 2);
	this.sx = 0.5 + this.rand() % 11 * 0.1;
	this.sy = this.sx;
	this.SetUpdateFunction(function ()
	{
		this.sx *= 1.05;
		this.sy = this.sx;

		if (this.alpha > 0.07)
		{
			this.alpha -= 0.07;
		}
		else
		{
			this.Release();
		}

		return true;
	});
	this.priority = 300;
}

function Player_Lost( t )
{
	this.ShotInit(t);
	this.SetMotion(t.flag1 + 19, 5);
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.keyTake <= 6)
		{
			if (this.owner in this.actor)
			{
				if (this.actor[this.owner].motion == this.motion)
				{
					this.x = this.actor[this.owner].x;
					this.y = this.actor[this.owner].y;
					this.direction = this.actor[this.owner].direction;

					if (this.actor[this.owner].keyTake >= 4)
					{
						this.SetMotion(this.motion, 7);
					}
				}
				else
				{
					this.Release();
				}
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
	this.priority = 300;
}

function HitEffect_Low( t )
{
	this.ShotInit(t);
	this.SetMotion(9200, 0);
	this.sx = this.sy = 2.0;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_High( t )
{
	this.ShotInit(t);
	this.SetMotion(9201, 0);
	this.sx = this.sy = 2.0;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_LowR( t )
{
	this.ShotInit(t);
	this.SetMotion(9202, 0);
	this.sx = this.sy = 2.0;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_HighR( t )
{
	this.ShotInit(t);
	this.SetMotion(9203, 0);
	this.sx = this.sy = 2.0;
	this.SetEndMotionCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_KyoukoLow_V( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(299, 0);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_KyoukoLow_H( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	(this.sx = 0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(299, 1);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_KyoukoHigh_V( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	(this.sx = 0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(299, 2);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_KyoukoHigh_H( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(299, 3);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_SayakaLow_V( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(199, 0);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_SayakaLow_H( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(199, 1);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_SayakaHigh_V( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(199, 2);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_SayakaHigh_H( t )
{
	this.ShotInit(t);
	this.rz = (-30 + this.rand() % 61) * 0.017453292;
	this.sx = (0.80000001 + this.rand() % 21 * 0.0099999998) * 2.0;
	this.sy = this.sx;
	this.SetMotion(199, 3);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_Blood( t )
{
	this.ShotInit(t);
	this.rz = (-20 - this.rand() % 70) * 0.017453292;
	this.sx = 0.5 + this.rand() % 101 * 0.0099999998;
	this.sy = this.sx;
	this.SetMotion(9204, 0);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function HitEffect_Blood_G( t )
{
	this.ShotInit(t);
	this.rz = (-20 - this.rand() % 70) * 0.017453292;
	this.sx = 0.5 + this.rand() % 101 * 0.0099999998;
	this.sy = this.sx;
	this.SetMotion(9205, 0);
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetEndMotionCallbackFunction(null);
	this.SetUpdateFunction(function ()
	{
		return true;
	});
}

function Effect_Smoke( t )
{
	this.ShotInit(t);
	this.flag2 = t.flag2;
	this.rz = t.rz;
	this.SetMotion(9300, t.flag1);
	this.sx = t.scale;
	this.sy = this.sx;
	this.priority = 300;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		if (this.keyTake == 4)
		{
			this.sx += this.flag2;
			this.sy = this.sx;
			this.flag2 *= 0.92000002;

			if (this.alpha > 0.079999998)
			{
				this.alpha -= 0.079999998;
			}
			else
			{
				this.Release();
			}
		}
		else
		{
		}

		return true;
	});
}

function BlackSmoke_Small( t )
{
	for( local i = 0; i < 5; i++ )
	{
		local t2 = t;
		this.world2d.CreateActor(this.x, this.y, this.direction, function ( t_ )
		{
			this.ShotInit(t_);
			this.rz = this.rand() % 360 * 0.017453292;
			this.SetMotion(9400, 0);
			this.sx = t_.scale * (0.60000002 + this.rand() % 9 * 0.1);
			this.sy = this.sx;
			this.count = 10 + this.rand() % 30;
			this.flag1 = (0.050000001 + this.rand() % 5 * 0.0099999998) * t_.scale;
			this.flag2 = (-10.0 + this.rand() % 21) * 0.017453292;
			local v_ = 4.0 + this.rand() % 80 * 0.1;
			this.vx = v_ * this.cos(this.rz) * t_.scale;
			this.vy = v_ * this.sin(this.rz) * t_.scale;
			this.SetUpdateFunction(function ()
			{
				this.flag1 *= 0.92000002;
				this.sx += this.flag1;
				this.sy = this.sx;
				this.count--;
				this.vx *= 0.92000002;
				this.vy *= 0.92000002;
				this.flag2 *= 0.92000002;
				this.rz += this.flag2;

				if (this.count <= 0)
				{
					if (this.alpha > 0.029999999)
					{
						this.alpha -= 0.029999999;
					}
					else
					{
						this.Release();
					}
				}

				return true;
			});
		}, t2);
	}
}

function BlackSmoke_Small_B( x_, y_, t )
{
	for( local i = 0; i < 5; i++ )
	{
		local t2 = t;
		this.world2d.CreateActor(x_, y_, this.direction, function ( t_ )
		{
			this.ShotInit(t_);
			this.rz = this.rand() % 360 * 0.017453292;
			this.SetMotion(9400, 0);
			this.sx = t_.scale * (0.60000002 + this.rand() % 9 * 0.1);
			this.sy = this.sx;
			this.count = 5 + this.rand() % 11;
			this.flag1 = (0.050000001 + this.rand() % 5 * 0.0099999998) * t_.scale;
			this.flag2 = (-10.0 + this.rand() % 21) * 0.017453292;
			local v_ = 6.0 + this.rand() % 120 * 0.1;
			this.vx = v_ * this.cos(this.rz) * t_.scale;
			this.vy = v_ * this.sin(this.rz) * t_.scale;
			this.SetUpdateFunction(function ()
			{
				this.flag1 *= 0.92000002;
				this.sx += this.flag1;
				this.sy = this.sx;
				this.count--;
				this.vx *= 0.92000002;
				this.vy *= 0.92000002;
				this.flag2 *= 0.92000002;
				this.rz += this.flag2;

				if (this.count <= 0)
				{
					if (this.alpha > 0.029999999)
					{
						this.alpha -= 0.029999999;
					}
					else
					{
						this.Release();
					}
				}

				return true;
			});
		}, t2);
	}
}

function SetGoahed()
{
	this.world2d.CreateActorOnScreen(700, 250, 1.0, this.GoEffect, this.DefaultShotTable());
}

function GoEffect( t )
{
	this.ShotInit(t);
	this.SetMotion(9100, t.flag1);
	this.priority = 400;
	this.SetEndTakeCallbackFunction(this.EndtoRelease);
	this.SetUpdateFunction(function ()
	{
		this.count++;

		if (this.count >= 240)
		{
			this.Release();
		}

		return true;
	});
}

function SetGoback()
{
	local t = this.DefaultShotTable();
	t.flag1 = 1;
	this.world2d.CreateActorOnScreen(100, 250, 1.0, this.GoEffect, t);
}

function DamageFont( t )
{
	if (t.type == null)
	{
		this.SetMotion(9001, t.val);
	}
	else
	{
		this.SetMotion(9002 + t.type, t.val);
	}

	this.sx = t.scale;
	this.sy = t.scale;
	this.priority = 390;
	this.vy = -1.5;
	this.filter = 2;
	this.SetUpdateFunction(function ()
	{
		this.vy *= 0.94999999;
		this.count++;

		if (this.sx <= 0.89999998)
		{
			if (this.count >= 60)
			{
				if (this.alpha > 0.025)
				{
					this.alpha -= 0.025;
				}
				else
				{
					this.Release();
				}
			}
		}
		else
		{
			this.sx -= 0.050000001;
			this.sy -= 0.050000001;
		}

		return true;
	});
}

function BigDamageFont( t )
{
	if (t.type == null)
	{
		this.SetMotion(9001, t.val);
	}
	else
	{
		this.SetMotion(9002 + t.type, t.val);
	}

	this.sx = t.scale;
	this.sy = t.scale;
	this.priority = 390;
	this.vy = -1.5;
	this.filter = 2;
	this.SetUpdateFunction(function ()
	{
		this.vy *= 0.94999999;
		this.count++;

		if (this.sx <= 1.5)
		{
			this.sx = this.sy = 1.5;

			if (this.count >= 60)
			{
				if (this.alpha > 0.025)
				{
					this.alpha -= 0.025;
				}
				else
				{
					this.Release();
				}
			}
		}
		else
		{
			this.sx -= 0.1;
			this.sy -= 0.1;
		}

		return true;
	});
}

function LevelUP_Effect( t )
{
	this.ShotInit(t);
	this.SetMotion(9011, 0);
	this.SetEndTakeCallbackFunction(function ()
	{
		this.isVisible = false;
	});
	this.SetUpdateFunction(function ()
	{
		this.count++;

		if (this.count >= 120)
		{
			this.Release();
		}

		if ((this.owner in this.actor) && this.count % 2 == 0)
		{
			local t_ = this.actor[this.owner];
			this.world2d.CreateActor(t_.x + 30 - this.rand() % 61, t_.y - this.rand() % 100, this.direction, this.LevelUP_Ball_EffectB, this.DefaultShotTable());
			this.x = t_.x;
			this.y = t_.y;
		}

		return true;
	});
}

function LevelUP_Ball_Effect( t )
{
	this.ShotInit(t);
	this.SetMotion(9012, 0);
	this.vx = 18.0 * this.cos(t.flag1);
	this.vy = 2.0 * this.sin(t.flag1);

	if (this.vy < -0.0)
	{
		this.priority = 150;
	}

	this.vy -= 20.0;
	this.SetUpdateFunction(function ()
	{
		this.vx *= 0.80000001;
		this.vy *= 0.80000001;
		this.count++;

		if (this.count >= 10)
		{
			this.sx *= 0.89999998;
			this.sy *= 1.1;

			if (this.sx <= 0.0099999998)
			{
				this.Release();
			}
		}

		return true;
	});
}

function LevelUP_Ball_EffectB( t )
{
	this.ShotInit(t);
	this.SetMotion(9012, 0);

	if (this.rand() % 100 <= 49)
	{
		this.priority = 150;
	}

	this.vx = 1.0 - this.rand() % 21 * 0.1;
	this.vy = -(this.rand() % 11) * 0.1;
	this.sx = this.sy = 0.5 + this.rand() % 11 * 0.1;
	this.SetUpdateFunction(function ()
	{
		this.vy += 0.1;
		this.sx *= 0.95999998;
		this.sy *= 0.95999998;
		this.count++;

		if (this.count >= 10)
		{
			if (this.alpha > 0.02)
			{
				this.alpha -= 0.02;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function PlayerDeathAura( t )
{
	this.ShotInit(t);
	this.SetMotion(9400, 0);
	this.flag1 = t.flag1 + this.rand() % 20 * 0.017453292;
	this.sx = this.sy = t.flag2 + this.rand() % 20 * 0.050000001;
	this.vy = -10.0;
	this.flag3 = (5 - this.rand() % 11) * 0.017453292;
	this.rz = this.rand() % 360 * 0.017453292;
	this.vx = t.flag2 * 20 * this.cos(this.flag1);
	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.sx += 0.0099999998;
		this.sy = this.sx;
		this.rz += this.flag3;
		this.vy -= 0.25;
		this.count++;

		if (this.count >= 30)
		{
			if (this.alpha > 0.02)
			{
				this.alpha -= 0.02;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function BossDeathAura( t )
{
	this.ShotInit(t);
	this.SetMotion(9400, 0);
	this.flag1 = t.flag1 + this.rand() % 20 * 0.017453292;
	this.sx = this.sy = t.flag2 + this.rand() % 20 * 0.0099999998;
	this.vy = -10.0;
	this.flag3 = (5 - this.rand() % 11) * 0.017453292;
	this.rz = this.rand() % 360 * 0.017453292;
	this.vx = t.flag2 * 20 * this.cos(this.flag1);
	this.SetUpdateFunction(function ()
	{
		this.count++;
		this.sx += 0.0099999998;
		this.sy = this.sx;
		this.rz += this.flag3;
		this.vy -= 0.25;
		this.count++;

		if (this.count >= 30)
		{
			if (this.alpha > 0.02)
			{
				this.alpha -= 0.02;
			}
			else
			{
				this.Release();
			}
		}

		return true;
	});
}

function BossShockEffect( t )
{
	this.ShotInit(t);
	this.priority = 50;
	this.SetMotion(t.flag1 + 19, 1);
	this.sx = this.sy = t.scale;
	this.sx += this.rand() % 10 * 0.0099999998;
	this.sy = this.sx;
	local r = -(this.rand() % 181) * 0.017453292;
	local V = 0.5 + this.rand() % 10 * 0.0099999998;
	this.vx = V * this.cos(r);
	this.vy = V * this.sin(r);
	this.SetUpdateFunction(function ()
	{
		this.sx += 0.025;
		this.sy = this.sx;

		if (this.alpha > 0.050000001)
		{
			this.alpha -= 0.050000001;
		}
		else
		{
			this.Release();
		}

		return true;
	});
}

function Clear_GrifSeed( t )
{
	this.ShotInit(t);
	this.SetMotion(9400 + t.flag1, 0);
	this.vy = 10.0;
	this.PlaySE(1024);
	this.collisionMask = 8;
	local t = this.DefaultShotTable();
	t.flag1 = this.name;
	this.SetUpdateFunction(function ()
	{
		if (this.keyTake == 0)
		{
			if (this.flag1 == 0)
			{
				this.vy += 0.5;
			}
			else
			{
				this.vy += 0.30000001;
			}

			if (this.hitBottom)
			{
				if (this.flag1 == 0)
				{
					this.flag1 = 1;
					this.PlaySE(1025);
					this.vy = -6.0;
					this.PlaySE(1025);
				}
				else
				{
					this.flag1 = 2;
					this.vx = 0.0;
					this.vy = 0.0;
					this.SetMotion(this.motion, 1);
					this.PlaySE(1025);
				}
			}
		}

		return true;
	});
}

function Grif_Shadow( t )
{
	this.ShotInit(t);
	this.priority = 500;
	this.SetMotion(9406, 0);
	this.filter = 2;
	this.option = t.flag1;
	this.SetUpdateFunction(function ()
	{
		local Pos_ = this.Vector3();
		local tPos_ = this.Vector3();
		local getPoint_ = this.Vector3();
		local Range_ = 1280.0;
		local py = this.camera2d.top;

		if (this.world2d.RayTest(getPoint_, Pos_, tPos_, 8 | 4))
		{
			this.isVisible = true;
			this.y = getPoint_.y;

			if (this.y - py <= -4.0)
			{
				this.isVisible = false;
			}
			else if (this.y < py)
			{
				this.y = py;
			}
		}
		else
		{
			this.isVisible = false;
		}

		return true;
	});
}

