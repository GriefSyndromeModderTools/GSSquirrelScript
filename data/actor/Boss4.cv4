function Update_Normal()
{
	if (this.life <= 0)
	{
		::StageMainAct.bossLifePer = 0.0;
	}
	else
	{
		::StageMainAct.bossLifePer = this.life.tofloat() / this.lifeMax.tofloat();
	}

	::StageMainAct.bossLv = this.level;

	if (this.UpdateStopCheck())
	{
		return false;
	}

	this.EnemyCommonLoop();
	this.SetGravity();

	if (this.aList.len() > 0)
	{
		this.u.CPU_aListAction.call(this);
	}
	else
	{
		local Dice_ = this.rand() % 100;

		if (Dice_ <= 33)
		{
			local l = this.ActionData();
			l.script = this.u.RandomTarget;
			this.aList.append(l);
		}
		else
		{
			local l = this.ActionData();
			l.script = this.u.SearchTarget;
			this.aList.append(l);
		}

		local l = this.ActionData();
		l.script = this.u.FreeCheck;
		this.aList.append(l);
		local l = this.ActionData();
		l.script = this.u.BeginStand;
		l.time = 180 + this.rand() % 30;
		l.val = 0.0;
		this.aList.append(l);
		Dice_ = this.rand() % 100;

		if (Dice_ <= 100)
		{
			local l = this.ActionData();
			l.script = this.u.BeginMove;
			l.val = 0.0;
			this.aList.append(l);
			local l = this.ActionData();
			l.script = this.u.FreeCheck;
			this.aList.append(l);
		}

		local l = this.ActionData();
		l.script = this.u.BeginStand;
		l.time = 60;
		l.val = 0.0;
		this.aList.append(l);
		local l = this.ActionData();
		l.script = this.u.CPU_Attack;
		this.aList.append(l);
	}

	if (this.stateLabel)
	{
		this.stateLabel.call(this);
	}

	return true;
}

function CPU_Attack( val )
{
	local d = this.GetTargetDist();
	local Dice_ = this.rand() % 100;
	this.aList.resize(0);

	if (d != false)
	{
		if (Dice_ <= 33)
		{
			local l = this.ActionData();
			l.script = this.u.BeginAttackA;
			this.aList.append(l);
		}
		else if (Dice_ <= 55)
		{
			local l = this.ActionData();
			l.script = this.u.BeginAttackB;
			this.aList.append(l);
		}
		else if (Dice_ <= 77)
		{
			local l = this.ActionData();
			l.script = this.u.BeginAttackC;
			this.aList.append(l);
		}
		else
		{
			local l = this.ActionData();
			l.script = this.u.BeginAttackD;
			this.aList.append(l);
		}
	}

	return true;
}

function EndtoFreeMove()
{
	this.LabelClear();

	if (this.isAir)
	{
		this.SetMotion(this.u.CA, 0);
	}
	else
	{
		this.SetMotion(this.u.CA, 0);
	}
}

function BeginStand( dir )
{
	if (this.flagState & 32)
	{
		if (this.motion != this.u.CA)
		{
			this.LabelClear();
			this.SetMotion(this.u.CA, 0);
		}

		this.vx = 0.0;
	}

	return true;
}

function BeginMove( t )
{
	if (this.flagState & 32)
	{
		if (this.motion != this.u.CA + 1)
		{
			this.LabelClear();
			this.PlaySE(4303);
			this.SetMotion(this.u.CA + 1, 0);
			this.flag1 = 0;
			this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
			this.stateLabel = function ()
			{
				if (this.keyTake == 1)
				{
					switch(this.flag1)
					{
					case 0:
						this.sy *= 0.89999998;
						this.sx -= 0.0099999998;

						if (this.sy < 0.050000001)
						{
							this.count = 20 + this.rand() % 20;
							this.isVisible = false;
							this.flag1 = 1;
							local cx = (::stage.scrollRight + ::stage.scrollLeft) * 0.5;

							if (this.x > cx)
							{
								this.direction = -1.0;
								this.vx = -10.0 - this.rand() % 40 * 0.1;
							}
							else
							{
								this.direction = 1.0;
								this.vx = 10.0 + this.rand() % 40 * 0.1;
							}
						}

						break;

					case 1:
						this.count--;

						if (this.count <= 0)
						{
							this.flag1 = 2;
							this.isVisible = true;
							this.vx = 0.0;
							this.PlaySE(4303);
						}

						break;

					case 2:
						this.sy += 0.050000001;
						this.sx += 0.0099999998;

						if (this.sx > 1.0)
						{
							this.sx = 1.0;
						}

						if (this.sy > 1.0)
						{
							this.sy = 1.0;
							this.sx = 1.0;
							this.SetMotion(this.u.CA + 1, 2);
						}

						break;
					}
				}
			};
			return false;
		}

		this.vx = 0.0;
	}

	return true;
}

function BeginAttackA( val_ )
{
	if (this.flagState & 32)
	{
		this.LabelClear();
		this.HitReset();
		this.atkCount = 0;
		this.SetMotion(this.u.CA + 20, 0);
		this.vx = 0.0;
		this.count = 0;
		this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Boss4_Tree, this.DefaultShotTable());
		this.stateLabel = function ()
		{
			this.count++;

			if (this.count >= 520)
			{
				this.u.EndtoFreeMove.call(this);
			}
		};
		return false;
	}

	return true;
}

function BeginAttackB( val_ )
{
	if (this.flagState & 32)
	{
		this.LabelClear();
		this.HitReset();
		this.atkCount = 0;
		this.SetMotion(this.u.CA + 21, 0);
		this.PlaySE(4305);
		this.vx = 0.0;
		this.count = 0;

		if (this.life.tofloat() / this.lifeMax <= 0.33000001)
		{
			this.flag3 = 1;
		}
		else
		{
			this.flag3 = 0;
		}

		this.stateLabel = function ()
		{
			if (this.keyTake == 1)
			{
				this.count++;

				if (this.count == 120 || this.count == 140 || this.count == 160 || this.count == 180 || this.count == 200 || this.count == 220)
				{
					local t = this.DefaultShotTable();
					t.rz = -(45 + this.rand() % 91) * 0.017453292;
					t.flag1 = 20.0;
					this.world2d.CreateActor(this.point0_x, this.point0_y + this.rand() % 41, this.direction, this.Boss4_Hand_Bound, t);
				}

				if (this.flag3 == 1)
				{
					if (this.count == 240 || this.count == 260 || this.count == 280 || this.count == 300)
					{
						local t = this.DefaultShotTable();
						t.rz = -(30 + this.rand() % 121) * 0.017453292;
						t.flag1 = 20.0;
						this.world2d.CreateActor(this.point0_x, this.point0_y + this.rand() % 41, this.direction, this.Boss4_Hand_Bound, t);
					}
				}

				if (this.count >= 480)
				{
					this.SetMotion(this.u.CA + 21, 2);
				}
			}
		};
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		return false;
	}

	return true;
}

function BeginAttackC( val_ )
{
	if (this.flagState & 32)
	{
		this.LabelClear();
		this.HitReset();
		this.atkCount = 0;
		this.SetMotion(this.u.CA + 21, 0);
		this.PlaySE(4305);
		this.vx = 0.0;
		this.count = 0;

		if (this.life.tofloat() / this.lifeMax <= 0.33000001)
		{
			this.flag3 = 1;
		}
		else
		{
			this.flag3 = 0;
		}

		this.stateLabel = function ()
		{
			if (this.keyTake == 1)
			{
				this.count++;

				if (this.count == 120 || this.count == 140 || this.count == 160)
				{
					local t = this.DefaultShotTable();
					t.rz = -(45 + this.rand() % 91) * 0.017453292;
					t.flag1 = 8.0;

					if (this.target in this.actor)
					{
						t.rz = this.atan2(this.actor[this.target].y - 40 - this.point0_y, (this.actor[this.target].x - this.x) * this.direction);
					}

					t.flag1 = 8.0;
					this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Boss4_Hand, t);
				}

				if (this.flag3 == 1)
				{
					if (this.count == 250 || this.count == 270 || this.count == 290)
					{
						local t = this.DefaultShotTable();
						t.rz = -(45 + this.rand() % 91) * 0.017453292;
						t.flag1 = 8.0;

						if (this.target in this.actor)
						{
							t.rz = this.atan2(this.actor[this.target].y - 40 - this.point0_y, (this.actor[this.target].x - this.x) * this.direction);
						}

						t.flag1 = 8.0;
						this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Boss4_Hand, t);
					}
				}

				if (this.count >= 480)
				{
					this.SetMotion(this.u.CA + 21, 2);
				}
			}
		};
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		return false;
	}

	return true;
}

function BeginAttackD( val_ )
{
	if (this.flagState & 32)
	{
		this.LabelClear();
		this.HitReset();
		this.atkCount = 0;
		this.SetMotion(this.u.CA + 21, 0);
		this.PlaySE(4305);
		this.vx = 0.0;
		this.count = 0;
		this.flag1 = this.rand() % 360 * 0.017453292;
		this.flag2 = 0;

		if (this.life.tofloat() / this.lifeMax <= 0.33000001)
		{
			this.flag3 = 1;
		}
		else
		{
			this.flag3 = 0;
		}

		this.stateLabel = function ()
		{
			if (this.keyTake == 1)
			{
				this.count++;

				if (this.count >= 120 && this.count % 10 == 0)
				{
					if (this.flag2 < 12 && this.flag3 == 0)
					{
						local t = this.DefaultShotTable();
						t.rz = this.rand() % 360 * 0.017453292;
						t.flag1 = 8.0;

						if (this.target in this.actor)
						{
							t.rz = this.flag1;
						}

						t.flag1 = 8.0;
						this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Boss4_Hand, t);
						this.flag2++;
						this.flag1 += 360 / 12 * 0.017453292;
					}

					if (this.flag2 < 16 && this.flag3 == 1)
					{
						local t = this.DefaultShotTable();
						t.rz = this.rand() % 360 * 0.017453292;
						t.flag1 = 8.0;

						if (this.target in this.actor)
						{
							t.rz = this.flag1;
						}

						t.flag1 = 8.0;
						this.world2d.CreateActor(this.point0_x, this.point0_y, this.direction, this.Boss4_Hand, t);
						this.flag2++;
						this.flag1 += 360 / 16 * 0.017453292;
					}
				}

				if (this.count >= 480)
				{
					this.SetMotion(this.u.CA + 21, 2);
				}
			}
		};
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		return false;
	}

	return true;
}

function BattleBegin_Init()
{
	this.LabelClear();
	this.isAir = false;
	this.SetMotion(this.u.CA + 40, 0);
	this.vx = 0.0;
	this.vy = 0.0;
	this.count = 0;
	this.stateLabel = this.u.BattleBegin;
	this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
}

function BattleBegin()
{
	if (this.keyTake == 0)
	{
		if (this.count == 1)
		{
			this.u.BeginStand.call(this, null);
		}
	}
	else
	{
	}
}

function BeginCry( val )
{
	if (this.flagState & 32)
	{
		this.LabelClear();
		this.PlaySE(4000);
		this.SetMotion(this.u.CA + 41, 0);
		this.vx = 0.0;
		this.stateLabel = function ()
		{
			if (this.keyTake == 1)
			{
				this.count++;

				if (this.count >= 60)
				{
					this.SetMotion(this.u.CA + 41, 2);
					this.count = 0;
				}
			}

			if (this.keyTake == 3)
			{
				this.count++;

				if (this.count >= 120)
				{
					this.SetMotion(this.u.CA + 41, 4);
					this.count = 0;
				}
			}
		};
		this.SetEndTakeCallbackFunction(this.KeyActionCheck);
		this.keyAction = [
			null,
			null,
			this.u.CryEffect
		];
		this.SetEndMotionCallbackFunction(this.u.EndtoFreeMove);
		return false;
	}

	return true;
}

function CryEffect()
{
	this.PlaySE(4010);
}

function Dead( t )
{
	this.LabelClear();
	this.aList = [];
	this.SetMotion(this.u.CA + 19, 0);
	this.vx = 0.0;
	this.vy = 0.0;
	this.setG = 0.0;
	this.count = 0;
	this.immuneGravity = true;
	this.stateLabel = this.u.Dead_Update;
}

function Dead_Smash( t )
{
	this.u.Dead.call(this, null);
}

function Dead_Update()
{
	this.count++;

	if (this.count >= 90)
	{
		if (this.count == 90)
		{
			this.PlaySE(1021);
		}

		if (this.count % 7 == 0)
		{
			local t = this.DefaultShotTable();
			t.flag1 = this.u.CA;
			t.scale = this.sx;
			this.world2d.CreateActor(this.x + (this.rand() % 21 - 10), this.y, this.direction, this.BossShockEffect, t);
		}

		if (this.red > 0.0099999998)
		{
			this.sx += 0.0020000001;
			this.sy = this.sx;
			this.red -= 0.0049999999;
			this.green = this.red;
			this.blue = this.red;
		}
		else
		{
			this.red = 0.0;
			this.green = this.red;
			this.blue = this.red;
		}

		if (this.count >= 180)
		{
			local t = this.DefaultShotTable();
			t.flag1 = this.count * 7 * 0.017453292;
			t.flag2 = 0.1 + (this.count - 180) * 0.1;
			this.world2d.CreateActor(this.x + (this.rand() % 101 - 50) * t.flag2, this.y, this.direction, this.BossDeathAura, t);
		}
	}

	if (this.isVisible)
	{
		if (this.count >= 300)
		{
			if (this.count == 300)
			{
				this.PlaySE(1022);
			}

			this.vy = -40;
			this.sx *= 0.89999998;
			this.sy += 0.15000001;

			if (this.alpha > 0.050000001)
			{
				this.alpha -= 0.050000001;
			}
			else
			{
				this.isVisible = false;
			}
		}
	}
}

function DeadBound()
{
}

function Damage_Light( t )
{
}

function Damage_Heavy( t )
{
}

function Damage_Smash( t )
{
}

